+ module load cuda
++ /usr/bin/modulecmd bash load cuda
+ eval CPATH=/home/center/opt/x86_64/cores/cuda/12.0.1/extras/CUPTI/include:/home/center/opt/x86_64/cores/cuda/12.0.1/include ';export' 'CPATH;CUDA_HOME=/home/center/opt/x86_64/cores/cuda/12.0.1' ';export' 'CUDA_HOME;CUDA_PATH=/home/center/opt/x86_64/cores/cuda/12.0.1' ';export' 'CUDA_PATH;FLOW_CUDA_NAME=cuda' ';export' 'FLOW_CUDA_NAME;FLOW_CUDA_VER=12.0.1' ';export' 'FLOW_CUDA_VER;LD_LIBRARY_PATH=/home/center/opt/x86_64/cores/cuda/12.0.1/targets/x86_64-linux/lib:/home/center/opt/x86_64/cores/cuda/12.0.1/extras/CUPTI/lib64:/home/center/opt/x86_64/cores/cuda/12.0.1/lib64' ';export' 'LD_LIBRARY_PATH;LIBRARY_PATH=/home/center/opt/x86_64/cores/cuda/12.0.1/lib64' ';export' 'LIBRARY_PATH;LOADEDMODULES=cuda/12.0.1' ';export' 'LOADEDMODULES;MANPATH=/center/local/app/x86/nano/share/man:/usr/local/share/man:/usr/share/man' ';export' 'MANPATH;MODULEPATH=/home/center/opt/x86_64/modulefiles/CX/compiler/cuda/12.0.1:/home/center/opt/x86_64/modulefiles/CX/core:/center/local/app/x86/hpci/modulefiles' ';export' 'MODULEPATH;PATH=/home/center/opt/x86_64/cores/cuda/12.0.1/bin:/center/local/app/x86/nano/bin:/home/center/local/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/w49009a/.local/bin:/home/w49009a/bin' ';export' 'PATH;_LMFILES_=/home/center/opt/x86_64/modulefiles/CX/core/cuda/12.0.1' ';export' '_LMFILES_;'
++ CPATH=/home/center/opt/x86_64/cores/cuda/12.0.1/extras/CUPTI/include:/home/center/opt/x86_64/cores/cuda/12.0.1/include
++ export CPATH
++ CUDA_HOME=/home/center/opt/x86_64/cores/cuda/12.0.1
++ export CUDA_HOME
++ CUDA_PATH=/home/center/opt/x86_64/cores/cuda/12.0.1
++ export CUDA_PATH
++ FLOW_CUDA_NAME=cuda
++ export FLOW_CUDA_NAME
++ FLOW_CUDA_VER=12.0.1
++ export FLOW_CUDA_VER
++ LD_LIBRARY_PATH=/home/center/opt/x86_64/cores/cuda/12.0.1/targets/x86_64-linux/lib:/home/center/opt/x86_64/cores/cuda/12.0.1/extras/CUPTI/lib64:/home/center/opt/x86_64/cores/cuda/12.0.1/lib64
++ export LD_LIBRARY_PATH
++ LIBRARY_PATH=/home/center/opt/x86_64/cores/cuda/12.0.1/lib64
++ export LIBRARY_PATH
++ LOADEDMODULES=cuda/12.0.1
++ export LOADEDMODULES
++ MANPATH=/center/local/app/x86/nano/share/man:/usr/local/share/man:/usr/share/man
++ export MANPATH
++ MODULEPATH=/home/center/opt/x86_64/modulefiles/CX/compiler/cuda/12.0.1:/home/center/opt/x86_64/modulefiles/CX/core:/center/local/app/x86/hpci/modulefiles
++ export MODULEPATH
++ PATH=/home/center/opt/x86_64/cores/cuda/12.0.1/bin:/center/local/app/x86/nano/bin:/home/center/local/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/w49009a/.local/bin:/home/w49009a/bin
++ export PATH
++ _LMFILES_=/home/center/opt/x86_64/modulefiles/CX/core/cuda/12.0.1
++ export _LMFILES_
+ module load openmpi_cuda
++ /usr/bin/modulecmd bash load openmpi_cuda
+ eval CPATH=/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5/include:/home/center/opt/x86_64/cores/cuda/12.0.1/extras/CUPTI/include:/home/center/opt/x86_64/cores/cuda/12.0.1/include ';export' 'CPATH;INCLUDE_PATH=/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5/include' ';export' 'INCLUDE_PATH;LD_LIBRARY_PATH=/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5/lib:/home/center/opt/x86_64/cores/cuda/12.0.1/targets/x86_64-linux/lib:/home/center/opt/x86_64/cores/cuda/12.0.1/extras/CUPTI/lib64:/home/center/opt/x86_64/cores/cuda/12.0.1/lib64' ';export' 'LD_LIBRARY_PATH;LIBRARY_PATH=/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5/lib:/home/center/opt/x86_64/cores/cuda/12.0.1/lib64' ';export' 'LIBRARY_PATH;LOADEDMODULES=cuda/12.0.1:openmpi_cuda/4.1.5' ';export' 'LOADEDMODULES;MANPATH=/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5/share/man:/center/local/app/x86/nano/share/man:/usr/local/share/man:/usr/share/man' ';export' 'MANPATH;OMPI_MCA_btl=\^openib' ';export' 'OMPI_MCA_btl;OMPI_MCA_plm_rsh_agent=/bin/pjrsh' ';export' 'OMPI_MCA_plm_rsh_agent;OPENMPI_CUDA_DIR=/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5' ';export' 'OPENMPI_CUDA_DIR;OPENMPI_CUDA_INC=/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5/include' ';export' 'OPENMPI_CUDA_INC;OPENMPI_CUDA_LIB=/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5/lib' ';export' 'OPENMPI_CUDA_LIB;PATH=/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5/bin:/home/center/opt/x86_64/cores/cuda/12.0.1/bin:/center/local/app/x86/nano/bin:/home/center/local/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/w49009a/.local/bin:/home/w49009a/bin' ';export' 'PATH;PKG_CONFIG_PATH=/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5/lib/pkgconfig' ';export' 'PKG_CONFIG_PATH;_LMFILES_=/home/center/opt/x86_64/modulefiles/CX/core/cuda/12.0.1:/home/center/opt/x86_64/modulefiles/CX/compiler/cuda/12.0.1/openmpi_cuda/4.1.5' ';export' '_LMFILES_;'
++ CPATH=/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5/include:/home/center/opt/x86_64/cores/cuda/12.0.1/extras/CUPTI/include:/home/center/opt/x86_64/cores/cuda/12.0.1/include
++ export CPATH
++ INCLUDE_PATH=/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5/include
++ export INCLUDE_PATH
++ LD_LIBRARY_PATH=/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5/lib:/home/center/opt/x86_64/cores/cuda/12.0.1/targets/x86_64-linux/lib:/home/center/opt/x86_64/cores/cuda/12.0.1/extras/CUPTI/lib64:/home/center/opt/x86_64/cores/cuda/12.0.1/lib64
++ export LD_LIBRARY_PATH
++ LIBRARY_PATH=/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5/lib:/home/center/opt/x86_64/cores/cuda/12.0.1/lib64
++ export LIBRARY_PATH
++ LOADEDMODULES=cuda/12.0.1:openmpi_cuda/4.1.5
++ export LOADEDMODULES
++ MANPATH=/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5/share/man:/center/local/app/x86/nano/share/man:/usr/local/share/man:/usr/share/man
++ export MANPATH
++ OMPI_MCA_btl='^openib'
++ export OMPI_MCA_btl
++ OMPI_MCA_plm_rsh_agent=/bin/pjrsh
++ export OMPI_MCA_plm_rsh_agent
++ OPENMPI_CUDA_DIR=/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5
++ export OPENMPI_CUDA_DIR
++ OPENMPI_CUDA_INC=/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5/include
++ export OPENMPI_CUDA_INC
++ OPENMPI_CUDA_LIB=/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5/lib
++ export OPENMPI_CUDA_LIB
++ PATH=/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5/bin:/home/center/opt/x86_64/cores/cuda/12.0.1/bin:/center/local/app/x86/nano/bin:/home/center/local/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/w49009a/.local/bin:/home/w49009a/bin
++ export PATH
++ PKG_CONFIG_PATH=/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5/lib/pkgconfig
++ export PKG_CONFIG_PATH
++ _LMFILES_=/home/center/opt/x86_64/modulefiles/CX/core/cuda/12.0.1:/home/center/opt/x86_64/modulefiles/CX/compiler/cuda/12.0.1/openmpi_cuda/4.1.5
++ export _LMFILES_
+ module load singularity
++ /usr/bin/modulecmd bash load singularity
+ eval LOADEDMODULES=cuda/12.0.1:openmpi_cuda/4.1.5:singularity/3.10.5 ';export' 'LOADEDMODULES;MANPATH=/home/center/opt/x86_64/apps/singularity/3.10.5/share/man:/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5/share/man:/center/local/app/x86/nano/share/man:/usr/local/share/man:/usr/share/man' ';export' 'MANPATH;PATH=/home/center/opt/x86_64/apps/singularity/3.10.5/bin:/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5/bin:/home/center/opt/x86_64/cores/cuda/12.0.1/bin:/center/local/app/x86/nano/bin:/home/center/local/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/w49009a/.local/bin:/home/w49009a/bin' ';export' 'PATH;SINGULARITY_DIR=/home/center/opt/x86_64/apps/singularity/3.10.5' ';export' 'SINGULARITY_DIR;_LMFILES_=/home/center/opt/x86_64/modulefiles/CX/core/cuda/12.0.1:/home/center/opt/x86_64/modulefiles/CX/compiler/cuda/12.0.1/openmpi_cuda/4.1.5:/home/center/opt/x86_64/modulefiles/CX/core/singularity/3.10.5' ';export' '_LMFILES_;'
++ LOADEDMODULES=cuda/12.0.1:openmpi_cuda/4.1.5:singularity/3.10.5
++ export LOADEDMODULES
++ MANPATH=/home/center/opt/x86_64/apps/singularity/3.10.5/share/man:/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5/share/man:/center/local/app/x86/nano/share/man:/usr/local/share/man:/usr/share/man
++ export MANPATH
++ PATH=/home/center/opt/x86_64/apps/singularity/3.10.5/bin:/home/center/opt/x86_64/apps/cuda/12.0.1/openmpi_cuda/4.1.5/bin:/home/center/opt/x86_64/cores/cuda/12.0.1/bin:/center/local/app/x86/nano/bin:/home/center/local/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/w49009a/.local/bin:/home/w49009a/bin
++ export PATH
++ SINGULARITY_DIR=/home/center/opt/x86_64/apps/singularity/3.10.5
++ export SINGULARITY_DIR
++ _LMFILES_=/home/center/opt/x86_64/modulefiles/CX/core/cuda/12.0.1:/home/center/opt/x86_64/modulefiles/CX/compiler/cuda/12.0.1/openmpi_cuda/4.1.5:/home/center/opt/x86_64/modulefiles/CX/core/singularity/3.10.5
++ export _LMFILES_
+ mpirun -n 8 -machinefile /home/w49009a/omote/KLab_MultiModalModel/multi_task_train/.d0001285531_nodeinfo -report-bindings -map-by ppr:2:socket singularity exec --nv /home/w49009a/pytorch_omote.sif bash /home/w49009a/omote/KLab_MultiModalModel/multi_task_train/test_each_node_task_train.sh
[cx091:00065] MCW rank 0 bound to socket 0[core 0[hwt 0]], socket 0[core 1[hwt 0]], socket 0[core 2[hwt 0]], socket 0[core 3[hwt 0]], socket 0[core 4[hwt 0]], socket 0[core 5[hwt 0]], socket 0[core 6[hwt 0]], socket 0[core 7[hwt 0]], socket 0[core 8[hwt 0]], socket 0[core 9[hwt 0]], socket 0[core 10[hwt 0]], socket 0[core 11[hwt 0]], socket 0[core 12[hwt 0]], socket 0[core 13[hwt 0]], socket 0[core 14[hwt 0]], socket 0[core 15[hwt 0]], socket 0[core 16[hwt 0]], socket 0[core 17[hwt 0]], socket 0[core 18[hwt 0]], socket 0[core 19[hwt 0]]: [B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B][./././././././././././././././././././.]
[cx091:00065] MCW rank 1 bound to socket 0[core 0[hwt 0]], socket 0[core 1[hwt 0]], socket 0[core 2[hwt 0]], socket 0[core 3[hwt 0]], socket 0[core 4[hwt 0]], socket 0[core 5[hwt 0]], socket 0[core 6[hwt 0]], socket 0[core 7[hwt 0]], socket 0[core 8[hwt 0]], socket 0[core 9[hwt 0]], socket 0[core 10[hwt 0]], socket 0[core 11[hwt 0]], socket 0[core 12[hwt 0]], socket 0[core 13[hwt 0]], socket 0[core 14[hwt 0]], socket 0[core 15[hwt 0]], socket 0[core 16[hwt 0]], socket 0[core 17[hwt 0]], socket 0[core 18[hwt 0]], socket 0[core 19[hwt 0]]: [B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B][./././././././././././././././././././.]
[cx091:00065] MCW rank 2 bound to socket 1[core 20[hwt 0]], socket 1[core 21[hwt 0]], socket 1[core 22[hwt 0]], socket 1[core 23[hwt 0]], socket 1[core 24[hwt 0]], socket 1[core 25[hwt 0]], socket 1[core 26[hwt 0]], socket 1[core 27[hwt 0]], socket 1[core 28[hwt 0]], socket 1[core 29[hwt 0]], socket 1[core 30[hwt 0]], socket 1[core 31[hwt 0]], socket 1[core 32[hwt 0]], socket 1[core 33[hwt 0]], socket 1[core 34[hwt 0]], socket 1[core 35[hwt 0]], socket 1[core 36[hwt 0]], socket 1[core 37[hwt 0]], socket 1[core 38[hwt 0]], socket 1[core 39[hwt 0]]: [./././././././././././././././././././.][B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B]
[cx091:00065] MCW rank 3 bound to socket 1[core 20[hwt 0]], socket 1[core 21[hwt 0]], socket 1[core 22[hwt 0]], socket 1[core 23[hwt 0]], socket 1[core 24[hwt 0]], socket 1[core 25[hwt 0]], socket 1[core 26[hwt 0]], socket 1[core 27[hwt 0]], socket 1[core 28[hwt 0]], socket 1[core 29[hwt 0]], socket 1[core 30[hwt 0]], socket 1[core 31[hwt 0]], socket 1[core 32[hwt 0]], socket 1[core 33[hwt 0]], socket 1[core 34[hwt 0]], socket 1[core 35[hwt 0]], socket 1[core 36[hwt 0]], socket 1[core 37[hwt 0]], socket 1[core 38[hwt 0]], socket 1[core 39[hwt 0]]: [./././././././././././././././././././.][B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B]
[cx092:00007] MCW rank 4 bound to socket 0[core 0[hwt 0]], socket 0[core 1[hwt 0]], socket 0[core 2[hwt 0]], socket 0[core 3[hwt 0]], socket 0[core 4[hwt 0]], socket 0[core 5[hwt 0]], socket 0[core 6[hwt 0]], socket 0[core 7[hwt 0]], socket 0[core 8[hwt 0]], socket 0[core 9[hwt 0]], socket 0[core 10[hwt 0]], socket 0[core 11[hwt 0]], socket 0[core 12[hwt 0]], socket 0[core 13[hwt 0]], socket 0[core 14[hwt 0]], socket 0[core 15[hwt 0]], socket 0[core 16[hwt 0]], socket 0[core 17[hwt 0]], socket 0[core 18[hwt 0]], socket 0[core 19[hwt 0]]: [B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B][./././././././././././././././././././.]
[cx092:00007] MCW rank 5 bound to socket 0[core 0[hwt 0]], socket 0[core 1[hwt 0]], socket 0[core 2[hwt 0]], socket 0[core 3[hwt 0]], socket 0[core 4[hwt 0]], socket 0[core 5[hwt 0]], socket 0[core 6[hwt 0]], socket 0[core 7[hwt 0]], socket 0[core 8[hwt 0]], socket 0[core 9[hwt 0]], socket 0[core 10[hwt 0]], socket 0[core 11[hwt 0]], socket 0[core 12[hwt 0]], socket 0[core 13[hwt 0]], socket 0[core 14[hwt 0]], socket 0[core 15[hwt 0]], socket 0[core 16[hwt 0]], socket 0[core 17[hwt 0]], socket 0[core 18[hwt 0]], socket 0[core 19[hwt 0]]: [B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B][./././././././././././././././././././.]
[cx092:00007] MCW rank 6 bound to socket 1[core 20[hwt 0]], socket 1[core 21[hwt 0]], socket 1[core 22[hwt 0]], socket 1[core 23[hwt 0]], socket 1[core 24[hwt 0]], socket 1[core 25[hwt 0]], socket 1[core 26[hwt 0]], socket 1[core 27[hwt 0]], socket 1[core 28[hwt 0]], socket 1[core 29[hwt 0]], socket 1[core 30[hwt 0]], socket 1[core 31[hwt 0]], socket 1[core 32[hwt 0]], socket 1[core 33[hwt 0]], socket 1[core 34[hwt 0]], socket 1[core 35[hwt 0]], socket 1[core 36[hwt 0]], socket 1[core 37[hwt 0]], socket 1[core 38[hwt 0]], socket 1[core 39[hwt 0]]: [./././././././././././././././././././.][B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B]
[cx092:00007] MCW rank 7 bound to socket 1[core 20[hwt 0]], socket 1[core 21[hwt 0]], socket 1[core 22[hwt 0]], socket 1[core 23[hwt 0]], socket 1[core 24[hwt 0]], socket 1[core 25[hwt 0]], socket 1[core 26[hwt 0]], socket 1[core 27[hwt 0]], socket 1[core 28[hwt 0]], socket 1[core 29[hwt 0]], socket 1[core 30[hwt 0]], socket 1[core 31[hwt 0]], socket 1[core 32[hwt 0]], socket 1[core 33[hwt 0]], socket 1[core 34[hwt 0]], socket 1[core 35[hwt 0]], socket 1[core 36[hwt 0]], socket 1[core 37[hwt 0]], socket 1[core 38[hwt 0]], socket 1[core 39[hwt 0]]: [./././././././././././././././././././.][B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B/B]
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
rm: cannot remove '/usr/local/cuda/compat/lib': Read-only file system
rm: cannot remove '/usr/local/cuda/compat/lib': Read-only file system
rm: cannot remove '/usr/local/cuda/compat/lib'rm: cannot remove '/usr/local/cuda/compat/lib': Read-only file system
: Read-only file system
rm: cannot remove '/usr/local/cuda/compat/lib': Read-only file system
rm: cannot remove '/usr/local/cuda/compat/lib': Read-only file system
rm: cannot remove '/usr/local/cuda/compat/lib'rm: cannot remove '/usr/local/cuda/compat/lib': Read-only file system: Read-only file system

rm: cannot remove '/usr/local/cuda/compat/lib': Read-only file system
rm: cannot remove '/usr/local/cuda/compat/lib': Read-only file system
rm: cannot remove '/usr/local/cuda/compat/lib': Read-only file system
rm: cannot remove '/usr/local/cuda/compat/lib': Read-only file system
rm: cannot remove '/usr/local/cuda/compat/lib': Read-only file system
rm: cannot remove '/usr/local/cuda/compat/lib': Read-only file system
rm: cannot remove '/usr/local/cuda/compat/lib': Read-only file system
rm: cannot remove '/usr/local/cuda/compat/lib': Read-only file system
[W socket.cpp:426] [c10d] The server socket cannot be initialized on [::]:27971 (errno: 97 - Address family not supported by protocol).
[W socket.cpp:601] [c10d] The client socket cannot be initialized to connect to ?UNKNOWN? (errno: 97 - Address family not supported by protocol).
[W socket.cpp:601] [c10d] The client socket cannot be initialized to connect to ?UNKNOWN? (errno: 97 - Address family not supported by protocol).
[W socket.cpp:601] [c10d] The client socket cannot be initialized to connect to ?UNKNOWN? (errno: 97 - Address family not supported by protocol).
[W socket.cpp:601] [c10d] The client socket cannot be initialized to connect to ?UNKNOWN? (errno: 97 - Address family not supported by protocol).
[W socket.cpp:601] [c10d] The client socket cannot be initialized to connect to ?UNKNOWN? (errno: 97 - Address family not supported by protocol).
[W socket.cpp:601] [c10d] The client socket cannot be initialized to connect to ?UNKNOWN? (errno: 97 - Address family not supported by protocol).
[W socket.cpp:601] [c10d] The client socket cannot be initialized to connect to ?UNKNOWN? (errno: 97 - Address family not supported by protocol).
[W socket.cpp:601] [c10d] The client socket cannot be initialized to connect to ?UNKNOWN? (errno: 97 - Address family not supported by protocol).
[W socket.cpp:601] [c10d] The client socket cannot be initialized to connect to ?UNKNOWN? (errno: 97 - Address family not supported by protocol).
[W socket.cpp:601] [c10d] The client socket cannot be initialized to connect to ?UNKNOWN? (errno: 97 - Address family not supported by protocol).
[W socket.cpp:601] [c10d] The client socket cannot be initialized to connect to ?UNKNOWN? (errno: 97 - Address family not supported by protocol).
[W socket.cpp:601] [c10d] The client socket cannot be initialized to connect to ?UNKNOWN? (errno: 97 - Address family not supported by protocol).
[W socket.cpp:601] [c10d] The client socket cannot be initialized to connect to ?UNKNOWN? (errno: 97 - Address family not supported by protocol).
[W socket.cpp:601] [c10d] The client socket cannot be initialized to connect to ?UNKNOWN? (errno: 97 - Address family not supported by protocol).
[W socket.cpp:601] [c10d] The client socket cannot be initialized to connect to ?UNKNOWN? (errno: 97 - Address family not supported by protocol).
[W socket.cpp:601] [c10d] The client socket cannot be initialized to connect to ?UNKNOWN? (errno: 97 - Address family not supported by protocol).
2023-09-10 10:35:49,797: Options: {'image_model_name': 'microsoft/swinv2-base-patch4-window8-256', 'image_model_train': False, 'language_model_name': 'google/flan-t5-base', 'ffn': False, 'transformer_d_model': 512, 'transformer_d_ff': 2048, 'transformer_d_kv': 64, 'transformer_num_heads': 2, 'transformer_num_layers': 8, 'transformer_num_decoder_layers': 8, 'image_vocab_size': 16384, 'loc_vocab_size': 1000, 'vae_ckpt_path': 'checkpoints/vqgan.pt', 'max_source_length': 256, 'max_target_length': 256, 'pretrain': False, 'seed': 999, 'loss': 'FocalLoss', 'lr': 0.05, 'optimizer': 'AdamW', 'lr_scheduler': '', 'batch_size': 64, 'accumulation_steps': 1, 'num_epochs': 10, 'num_steps': None, 'warmup_steps': None, 'save_interval': None, 'datasets': ['imagenet', 'sun397'], 'root_dir': '/user/data/', 'result_dir': 'results/multi_task_train/', 'gpu_nums': 8}
2023-09-10 10:35:49,797: make_logger
2023-09-10 10:35:49,797: Options: {'image_model_name': 'microsoft/swinv2-base-patch4-window8-256', 'image_model_train': False, 'language_model_name': 'google/flan-t5-base', 'ffn': False, 'transformer_d_model': 512, 'transformer_d_ff': 2048, 'transformer_d_kv': 64, 'transformer_num_heads': 2, 'transformer_num_layers': 8, 'transformer_num_decoder_layers': 8, 'image_vocab_size': 16384, 'loc_vocab_size': 1000, 'vae_ckpt_path': 'checkpoints/vqgan.pt', 'max_source_length': 256, 'max_target_length': 256, 'pretrain': False, 'seed': 999, 'loss': 'FocalLoss', 'lr': 0.05, 'optimizer': 'AdamW', 'lr_scheduler': '', 'batch_size': 64, 'accumulation_steps': 1, 'num_epochs': 10, 'num_steps': None, 'warmup_steps': None, 'save_interval': None, 'datasets': ['imagenet', 'sun397'], 'root_dir': '/user/data/', 'result_dir': 'results/multi_task_train/', 'gpu_nums': 8}
2023-09-10 10:35:49,797: Options: {'image_model_name': 'microsoft/swinv2-base-patch4-window8-256', 'image_model_train': False, 'language_model_name': 'google/flan-t5-base', 'ffn': False, 'transformer_d_model': 512, 'transformer_d_ff': 2048, 'transformer_d_kv': 64, 'transformer_num_heads': 2, 'transformer_num_layers': 8, 'transformer_num_decoder_layers': 8, 'image_vocab_size': 16384, 'loc_vocab_size': 1000, 'vae_ckpt_path': 'checkpoints/vqgan.pt', 'max_source_length': 256, 'max_target_length': 256, 'pretrain': False, 'seed': 999, 'loss': 'FocalLoss', 'lr': 0.05, 'optimizer': 'AdamW', 'lr_scheduler': '', 'batch_size': 64, 'accumulation_steps': 1, 'num_epochs': 10, 'num_steps': None, 'warmup_steps': None, 'save_interval': None, 'datasets': ['imagenet', 'sun397'], 'root_dir': '/user/data/', 'result_dir': 'results/multi_task_train/', 'gpu_nums': 8}
2023-09-10 10:35:49,797: Options: {'image_model_name': 'microsoft/swinv2-base-patch4-window8-256', 'image_model_train': False, 'language_model_name': 'google/flan-t5-base', 'ffn': False, 'transformer_d_model': 512, 'transformer_d_ff': 2048, 'transformer_d_kv': 64, 'transformer_num_heads': 2, 'transformer_num_layers': 8, 'transformer_num_decoder_layers': 8, 'image_vocab_size': 16384, 'loc_vocab_size': 1000, 'vae_ckpt_path': 'checkpoints/vqgan.pt', 'max_source_length': 256, 'max_target_length': 256, 'pretrain': False, 'seed': 999, 'loss': 'FocalLoss', 'lr': 0.05, 'optimizer': 'AdamW', 'lr_scheduler': '', 'batch_size': 64, 'accumulation_steps': 1, 'num_epochs': 10, 'num_steps': None, 'warmup_steps': None, 'save_interval': None, 'datasets': ['imagenet', 'sun397'], 'root_dir': '/user/data/', 'result_dir': 'results/multi_task_train/', 'gpu_nums': 8}
2023-09-10 10:35:49,798: make_logger
2023-09-10 10:35:49,798: make_logger
2023-09-10 10:35:49,798: make_logger
2023-09-10 10:35:49,807: Options: {'image_model_name': 'microsoft/swinv2-base-patch4-window8-256', 'image_model_train': False, 'language_model_name': 'google/flan-t5-base', 'ffn': False, 'transformer_d_model': 512, 'transformer_d_ff': 2048, 'transformer_d_kv': 64, 'transformer_num_heads': 2, 'transformer_num_layers': 8, 'transformer_num_decoder_layers': 8, 'image_vocab_size': 16384, 'loc_vocab_size': 1000, 'vae_ckpt_path': 'checkpoints/vqgan.pt', 'max_source_length': 256, 'max_target_length': 256, 'pretrain': False, 'seed': 999, 'loss': 'FocalLoss', 'lr': 0.05, 'optimizer': 'AdamW', 'lr_scheduler': '', 'batch_size': 64, 'accumulation_steps': 1, 'num_epochs': 10, 'num_steps': None, 'warmup_steps': None, 'save_interval': None, 'datasets': ['imagenet', 'sun397'], 'root_dir': '/user/data/', 'result_dir': 'results/multi_task_train/', 'gpu_nums': 8}
2023-09-10 10:35:49,807: Options: {'image_model_name': 'microsoft/swinv2-base-patch4-window8-256', 'image_model_train': False, 'language_model_name': 'google/flan-t5-base', 'ffn': False, 'transformer_d_model': 512, 'transformer_d_ff': 2048, 'transformer_d_kv': 64, 'transformer_num_heads': 2, 'transformer_num_layers': 8, 'transformer_num_decoder_layers': 8, 'image_vocab_size': 16384, 'loc_vocab_size': 1000, 'vae_ckpt_path': 'checkpoints/vqgan.pt', 'max_source_length': 256, 'max_target_length': 256, 'pretrain': False, 'seed': 999, 'loss': 'FocalLoss', 'lr': 0.05, 'optimizer': 'AdamW', 'lr_scheduler': '', 'batch_size': 64, 'accumulation_steps': 1, 'num_epochs': 10, 'num_steps': None, 'warmup_steps': None, 'save_interval': None, 'datasets': ['imagenet', 'sun397'], 'root_dir': '/user/data/', 'result_dir': 'results/multi_task_train/', 'gpu_nums': 8}
2023-09-10 10:35:49,807: Options: {'image_model_name': 'microsoft/swinv2-base-patch4-window8-256', 'image_model_train': False, 'language_model_name': 'google/flan-t5-base', 'ffn': False, 'transformer_d_model': 512, 'transformer_d_ff': 2048, 'transformer_d_kv': 64, 'transformer_num_heads': 2, 'transformer_num_layers': 8, 'transformer_num_decoder_layers': 8, 'image_vocab_size': 16384, 'loc_vocab_size': 1000, 'vae_ckpt_path': 'checkpoints/vqgan.pt', 'max_source_length': 256, 'max_target_length': 256, 'pretrain': False, 'seed': 999, 'loss': 'FocalLoss', 'lr': 0.05, 'optimizer': 'AdamW', 'lr_scheduler': '', 'batch_size': 64, 'accumulation_steps': 1, 'num_epochs': 10, 'num_steps': None, 'warmup_steps': None, 'save_interval': None, 'datasets': ['imagenet', 'sun397'], 'root_dir': '/user/data/', 'result_dir': 'results/multi_task_train/', 'gpu_nums': 8}
2023-09-10 10:35:49,807: Options: {'image_model_name': 'microsoft/swinv2-base-patch4-window8-256', 'image_model_train': False, 'language_model_name': 'google/flan-t5-base', 'ffn': False, 'transformer_d_model': 512, 'transformer_d_ff': 2048, 'transformer_d_kv': 64, 'transformer_num_heads': 2, 'transformer_num_layers': 8, 'transformer_num_decoder_layers': 8, 'image_vocab_size': 16384, 'loc_vocab_size': 1000, 'vae_ckpt_path': 'checkpoints/vqgan.pt', 'max_source_length': 256, 'max_target_length': 256, 'pretrain': False, 'seed': 999, 'loss': 'FocalLoss', 'lr': 0.05, 'optimizer': 'AdamW', 'lr_scheduler': '', 'batch_size': 64, 'accumulation_steps': 1, 'num_epochs': 10, 'num_steps': None, 'warmup_steps': None, 'save_interval': None, 'datasets': ['imagenet', 'sun397'], 'root_dir': '/user/data/', 'result_dir': 'results/multi_task_train/', 'gpu_nums': 8}
2023-09-10 10:35:49,807: make_logger
2023-09-10 10:35:49,807: make_logger
2023-09-10 10:35:49,807: make_logger
2023-09-10 10:35:49,807: make_logger
2023-09-10 10:35:52,431: rank:2 || start training
2023-09-10 10:35:52,431: min_step: 3, max_step: 4
2023-09-10 10:35:52,431: rank:3 || start training
2023-09-10 10:35:52,432: rank:1 || start training
2023-09-10 10:35:52,432: min_step: 3, max_step: 4
2023-09-10 10:35:52,432: rank:0 || start training
2023-09-10 10:35:52,432: min_step: 3, max_step: 4
2023-09-10 10:35:52,431: min_step: 3, max_step: 4
2023-09-10 10:35:52,431: rank:4 || start training
2023-09-10 10:35:52,431: rank:5 || start training
2023-09-10 10:35:52,431: min_step: 3, max_step: 4
2023-09-10 10:35:52,431: min_step: 3, max_step: 4
2023-09-10 10:35:52,431: rank:7 || start training
2023-09-10 10:35:52,432: min_step: 3, max_step: 4
2023-09-10 10:35:52,432: rank:6 || start training
2023-09-10 10:35:52,432: min_step: 3, max_step: 4
2023-09-10 10:35:52,818: epoch:1 step:1 rank:2 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:52,818: epoch:1 step:1 rank:0 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:52,830: epoch:1 step:1 rank:1 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:52,830: epoch:1 step:1 rank:3 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:52,846: epoch:1 step:1 rank:6 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:52,846: epoch:1 step:1 rank:7 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:52,846: epoch:1 step:1 rank:4 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:52,846: epoch:1 step:1 rank:5 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:52,975: epoch:1 step:1 rank:7 || image:[tensor([10.0007, 10.0015], device='cuda:3'), tensor([20.0007, 20.0015], device='cuda:3')] || in_text:[tensor([11.0007, 11.0015], device='cuda:3'), tensor([21.0007, 21.0015], device='cuda:3')] || out_text:[tensor([12.0007, 12.0015], device='cuda:3'), tensor([22.0007, 22.0015], device='cuda:3')]
2023-09-10 10:35:52,975: epoch:1 step:1 rank:6 || image:[tensor([10.0006, 10.0014], device='cuda:2'), tensor([20.0006, 20.0014], device='cuda:2')] || in_text:[tensor([11.0006, 11.0014], device='cuda:2'), tensor([21.0006, 21.0014], device='cuda:2')] || out_text:[tensor([12.0006, 12.0014], device='cuda:2'), tensor([22.0006, 22.0014], device='cuda:2')]
2023-09-10 10:35:52,976: epoch:1 step:1 rank:4 || image:[tensor([10.0004, 10.0012], device='cuda:0'), tensor([20.0004, 20.0012], device='cuda:0')] || in_text:[tensor([11.0004, 11.0012], device='cuda:0'), tensor([21.0004, 21.0012], device='cuda:0')] || out_text:[tensor([12.0004, 12.0012], device='cuda:0'), tensor([22.0004, 22.0012], device='cuda:0')]
2023-09-10 10:35:52,976: epoch:1 step:1 rank:5 || image:[tensor([10.0005, 10.0013], device='cuda:1'), tensor([20.0005, 20.0013], device='cuda:1')] || in_text:[tensor([11.0005, 11.0013], device='cuda:1'), tensor([21.0005, 21.0013], device='cuda:1')] || out_text:[tensor([12.0005, 12.0013], device='cuda:1'), tensor([22.0005, 22.0013], device='cuda:1')]
2023-09-10 10:35:52,985: epoch:1 step:1 rank:3 || image:[tensor([10.0003, 10.0011], device='cuda:3'), tensor([20.0003, 20.0011], device='cuda:3')] || in_text:[tensor([11.0003, 11.0011], device='cuda:3'), tensor([21.0003, 21.0011], device='cuda:3')] || out_text:[tensor([12.0003, 12.0011], device='cuda:3'), tensor([22.0003, 22.0011], device='cuda:3')]
2023-09-10 10:35:52,985: epoch:1 step:1 rank:2 || image:[tensor([10.0002, 10.0010], device='cuda:2'), tensor([20.0002, 20.0010], device='cuda:2')] || in_text:[tensor([11.0002, 11.0010], device='cuda:2'), tensor([21.0002, 21.0010], device='cuda:2')] || out_text:[tensor([12.0002, 12.0010], device='cuda:2'), tensor([22.0002, 22.0010], device='cuda:2')]
2023-09-10 10:35:52,986: epoch:1 step:1 rank:1 || image:[tensor([10.0001, 10.0009], device='cuda:1'), tensor([20.0001, 20.0009], device='cuda:1')] || in_text:[tensor([11.0001, 11.0009], device='cuda:1'), tensor([21.0001, 21.0009], device='cuda:1')] || out_text:[tensor([12.0001, 12.0009], device='cuda:1'), tensor([22.0001, 22.0009], device='cuda:1')]
2023-09-10 10:35:52,986: epoch:1 step:1 rank:0 || image:[tensor([10.0000, 10.0008], device='cuda:0'), tensor([20.0000, 20.0008], device='cuda:0')] || in_text:[tensor([11.0000, 11.0008], device='cuda:0'), tensor([21.0000, 21.0008], device='cuda:0')] || out_text:[tensor([12.0000, 12.0008], device='cuda:0'), tensor([22.0000, 22.0008], device='cuda:0')]
2023-09-10 10:35:53,940: epoch:1 step:2 rank:4 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:53,940: epoch:1 step:2 rank:7 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:53,940: epoch:1 step:2 rank:6 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:53,940: epoch:1 step:2 rank:5 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:53,943: epoch:1 step:2 rank:6 || image:[tensor([30.0026, 30.0034], device='cuda:2'), tensor([20.0406, 20.0414], device='cuda:2')] || in_text:[tensor([31.0026, 31.0034], device='cuda:2'), tensor([21.0406, 21.0414], device='cuda:2')] || out_text:[tensor([32.0026, 32.0034], device='cuda:2'), tensor([22.0406, 22.0414], device='cuda:2')]
2023-09-10 10:35:53,943: epoch:1 step:2 rank:4 || image:[tensor([30.0024, 30.0032], device='cuda:0'), tensor([20.0404, 20.0412], device='cuda:0')] || in_text:[tensor([31.0024, 31.0032], device='cuda:0'), tensor([21.0404, 21.0412], device='cuda:0')] || out_text:[tensor([32.0024, 32.0032], device='cuda:0'), tensor([22.0404, 22.0412], device='cuda:0')]
2023-09-10 10:35:53,943: epoch:1 step:2 rank:7 || image:[tensor([30.0027, 30.0035], device='cuda:3'), tensor([20.0407, 20.0415], device='cuda:3')] || in_text:[tensor([31.0027, 31.0035], device='cuda:3'), tensor([21.0407, 21.0415], device='cuda:3')] || out_text:[tensor([32.0027, 32.0035], device='cuda:3'), tensor([22.0407, 22.0415], device='cuda:3')]
2023-09-10 10:35:53,943: epoch:1 step:2 rank:5 || image:[tensor([30.0025, 30.0033], device='cuda:1'), tensor([20.0405, 20.0413], device='cuda:1')] || in_text:[tensor([31.0025, 31.0033], device='cuda:1'), tensor([21.0405, 21.0413], device='cuda:1')] || out_text:[tensor([32.0025, 32.0033], device='cuda:1'), tensor([22.0405, 22.0413], device='cuda:1')]
2023-09-10 10:35:53,975: epoch:1 step:2 rank:1 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:53,975: epoch:1 step:2 rank:0 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:53,975: epoch:1 step:2 rank:2 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:53,975: epoch:1 step:2 rank:3 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:53,978: epoch:1 step:2 rank:0 || image:[tensor([30.0020, 30.0028], device='cuda:0'), tensor([20.0400, 20.0408], device='cuda:0')] || in_text:[tensor([31.0020, 31.0028], device='cuda:0'), tensor([21.0400, 21.0408], device='cuda:0')] || out_text:[tensor([32.0020, 32.0028], device='cuda:0'), tensor([22.0400, 22.0408], device='cuda:0')]
2023-09-10 10:35:53,978: epoch:1 step:2 rank:1 || image:[tensor([30.0021, 30.0029], device='cuda:1'), tensor([20.0401, 20.0409], device='cuda:1')] || in_text:[tensor([31.0021, 31.0029], device='cuda:1'), tensor([21.0401, 21.0409], device='cuda:1')] || out_text:[tensor([32.0021, 32.0029], device='cuda:1'), tensor([22.0401, 22.0409], device='cuda:1')]
2023-09-10 10:35:53,978: epoch:1 step:2 rank:2 || image:[tensor([30.0022, 30.0030], device='cuda:2'), tensor([20.0402, 20.0410], device='cuda:2')] || in_text:[tensor([31.0022, 31.0030], device='cuda:2'), tensor([21.0402, 21.0410], device='cuda:2')] || out_text:[tensor([32.0022, 32.0030], device='cuda:2'), tensor([22.0402, 22.0410], device='cuda:2')]
2023-09-10 10:35:53,978: epoch:1 step:2 rank:3 || image:[tensor([30.0023, 30.0031], device='cuda:3'), tensor([20.0403, 20.0411], device='cuda:3')] || in_text:[tensor([31.0023, 31.0031], device='cuda:3'), tensor([21.0403, 21.0411], device='cuda:3')] || out_text:[tensor([32.0023, 32.0031], device='cuda:3'), tensor([22.0403, 22.0411], device='cuda:3')]
2023-09-10 10:35:53,982: epoch:1 step:3 rank:2 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:53,982: epoch:1 step:3 rank:3 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:53,982: epoch:1 step:3 rank:0 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:53,982: epoch:1 step:3 rank:1 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:53,982: epoch:1 step:3 rank:7 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:53,982: epoch:1 step:3 rank:6 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:53,982: epoch:1 step:3 rank:4 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:53,982: epoch:1 step:3 rank:5 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:53,985: epoch:1 step:3 rank:2 || image:[tensor([30.0142, 30.0150], device='cuda:2'), tensor([20.0802, 20.0810], device='cuda:2')] || in_text:[tensor([31.0142, 31.0150], device='cuda:2'), tensor([21.0802, 21.0810], device='cuda:2')] || out_text:[tensor([32.0142, 32.0150], device='cuda:2'), tensor([22.0802, 22.0810], device='cuda:2')]
2023-09-10 10:35:53,985: epoch:1 step:3 rank:3 || image:[tensor([30.0143, 30.0151], device='cuda:3'), tensor([20.0803, 20.0811], device='cuda:3')] || in_text:[tensor([31.0143, 31.0151], device='cuda:3'), tensor([21.0803, 21.0811], device='cuda:3')] || out_text:[tensor([32.0143, 32.0151], device='cuda:3'), tensor([22.0803, 22.0811], device='cuda:3')]
2023-09-10 10:35:53,985: epoch:1 step:3 rank:0 || image:[tensor([30.0140, 30.0148], device='cuda:0'), tensor([20.0800, 20.0808], device='cuda:0')] || in_text:[tensor([31.0140, 31.0148], device='cuda:0'), tensor([21.0800, 21.0808], device='cuda:0')] || out_text:[tensor([32.0140, 32.0148], device='cuda:0'), tensor([22.0800, 22.0808], device='cuda:0')]
2023-09-10 10:35:53,985: epoch:1 step:3 rank:1 || image:[tensor([30.0141, 30.0149], device='cuda:1'), tensor([20.0801, 20.0809], device='cuda:1')] || in_text:[tensor([31.0141, 31.0149], device='cuda:1'), tensor([21.0801, 21.0809], device='cuda:1')] || out_text:[tensor([32.0141, 32.0149], device='cuda:1'), tensor([22.0801, 22.0809], device='cuda:1')]
2023-09-10 10:35:53,985: epoch:1 step:3 rank:4 || image:[tensor([30.0144, 30.0152], device='cuda:0'), tensor([20.0804, 20.0812], device='cuda:0')] || in_text:[tensor([31.0144, 31.0152], device='cuda:0'), tensor([21.0804, 21.0812], device='cuda:0')] || out_text:[tensor([32.0144, 32.0152], device='cuda:0'), tensor([22.0804, 22.0812], device='cuda:0')]
2023-09-10 10:35:53,985: epoch:1 step:3 rank:7 || image:[tensor([30.0147, 30.0155], device='cuda:3'), tensor([20.0807, 20.0815], device='cuda:3')] || in_text:[tensor([31.0147, 31.0155], device='cuda:3'), tensor([21.0807, 21.0815], device='cuda:3')] || out_text:[tensor([32.0147, 32.0155], device='cuda:3'), tensor([22.0807, 22.0815], device='cuda:3')]
2023-09-10 10:35:53,985: epoch:1 step:3 rank:5 || image:[tensor([30.0145, 30.0153], device='cuda:1'), tensor([20.0805, 20.0813], device='cuda:1')] || in_text:[tensor([31.0145, 31.0153], device='cuda:1'), tensor([21.0805, 21.0813], device='cuda:1')] || out_text:[tensor([32.0145, 32.0153], device='cuda:1'), tensor([22.0805, 22.0813], device='cuda:1')]
2023-09-10 10:35:53,985: epoch:1 step:3 rank:6 || image:[tensor([30.0146, 30.0154], device='cuda:2'), tensor([20.0806, 20.0814], device='cuda:2')] || in_text:[tensor([31.0146, 31.0154], device='cuda:2'), tensor([21.0806, 21.0814], device='cuda:2')] || out_text:[tensor([32.0146, 32.0154], device='cuda:2'), tensor([22.0806, 22.0814], device='cuda:2')]
2023-09-10 10:35:53,994: epoch:1 step:3 rank:3 || train_loss : 1085.619384765625
2023-09-10 10:35:53,994: epoch:1 step:3 rank:2 || train_loss : 1085.6099446614583
2023-09-10 10:35:53,994: epoch:1 step:3 rank:0 || train_loss : 1085.59130859375
2023-09-10 10:35:53,994: epoch:1 step:3 rank:1 || train_loss : 1085.6005859375
2023-09-10 10:35:53,994: epoch:1 step:3 rank:7 || train_loss : 1096.1015625
2023-09-10 10:35:53,994: epoch:1 step:3 rank:4 || train_loss : 1096.0733235677083
2023-09-10 10:35:53,994: epoch:1 step:3 rank:5 || train_loss : 1096.0828450520833
2023-09-10 10:35:53,994: epoch:1 step:3 rank:6 || train_loss : 1096.09228515625
2023-09-10 10:35:53,995: epoch:1 step:3 rank:0 || all_train_loss : 8726.770833333334
2023-09-10 10:35:54,165: epoch:2 step:1 rank:4 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,171: epoch:2 step:1 rank:4 || image:[tensor([10.0004, 10.0012], device='cuda:0'), tensor([20.0004, 20.0012], device='cuda:0')] || in_text:[tensor([11.0004, 11.0012], device='cuda:0'), tensor([21.0004, 21.0012], device='cuda:0')] || out_text:[tensor([12.0004, 12.0012], device='cuda:0'), tensor([22.0004, 22.0012], device='cuda:0')]
2023-09-10 10:35:54,179: epoch:2 step:1 rank:0 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,184: epoch:2 step:1 rank:5 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,185: epoch:2 step:1 rank:0 || image:[tensor([10.0000, 10.0008], device='cuda:0'), tensor([20.0000, 20.0008], device='cuda:0')] || in_text:[tensor([11.0000, 11.0008], device='cuda:0'), tensor([21.0000, 21.0008], device='cuda:0')] || out_text:[tensor([12.0000, 12.0008], device='cuda:0'), tensor([22.0000, 22.0008], device='cuda:0')]
2023-09-10 10:35:54,190: epoch:2 step:1 rank:5 || image:[tensor([10.0005, 10.0013], device='cuda:1'), tensor([20.0005, 20.0013], device='cuda:1')] || in_text:[tensor([11.0005, 11.0013], device='cuda:1'), tensor([21.0005, 21.0013], device='cuda:1')] || out_text:[tensor([12.0005, 12.0013], device='cuda:1'), tensor([22.0005, 22.0013], device='cuda:1')]
2023-09-10 10:35:54,193: epoch:2 step:1 rank:7 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,199: epoch:2 step:1 rank:7 || image:[tensor([10.0007, 10.0015], device='cuda:3'), tensor([20.0007, 20.0015], device='cuda:3')] || in_text:[tensor([11.0007, 11.0015], device='cuda:3'), tensor([21.0007, 21.0015], device='cuda:3')] || out_text:[tensor([12.0007, 12.0015], device='cuda:3'), tensor([22.0007, 22.0015], device='cuda:3')]
2023-09-10 10:35:54,202: epoch:2 step:1 rank:1 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,202: epoch:2 step:1 rank:6 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,208: epoch:2 step:1 rank:1 || image:[tensor([10.0001, 10.0009], device='cuda:1'), tensor([20.0001, 20.0009], device='cuda:1')] || in_text:[tensor([11.0001, 11.0009], device='cuda:1'), tensor([21.0001, 21.0009], device='cuda:1')] || out_text:[tensor([12.0001, 12.0009], device='cuda:1'), tensor([22.0001, 22.0009], device='cuda:1')]
2023-09-10 10:35:54,207: epoch:2 step:1 rank:6 || image:[tensor([10.0006, 10.0014], device='cuda:2'), tensor([20.0006, 20.0014], device='cuda:2')] || in_text:[tensor([11.0006, 11.0014], device='cuda:2'), tensor([21.0006, 21.0014], device='cuda:2')] || out_text:[tensor([12.0006, 12.0014], device='cuda:2'), tensor([22.0006, 22.0014], device='cuda:2')]
2023-09-10 10:35:54,209: epoch:2 step:1 rank:2 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,214: epoch:2 step:1 rank:3 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,215: epoch:2 step:1 rank:2 || image:[tensor([10.0002, 10.0010], device='cuda:2'), tensor([20.0002, 20.0010], device='cuda:2')] || in_text:[tensor([11.0002, 11.0010], device='cuda:2'), tensor([21.0002, 21.0010], device='cuda:2')] || out_text:[tensor([12.0002, 12.0010], device='cuda:2'), tensor([22.0002, 22.0010], device='cuda:2')]
2023-09-10 10:35:54,219: epoch:2 step:1 rank:3 || image:[tensor([10.0003, 10.0011], device='cuda:3'), tensor([20.0003, 20.0011], device='cuda:3')] || in_text:[tensor([11.0003, 11.0011], device='cuda:3'), tensor([21.0003, 21.0011], device='cuda:3')] || out_text:[tensor([12.0003, 12.0011], device='cuda:3'), tensor([22.0003, 22.0011], device='cuda:3')]
2023-09-10 10:35:54,223: epoch:2 step:2 rank:2 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,223: epoch:2 step:2 rank:1 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,223: epoch:2 step:2 rank:0 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,222: epoch:2 step:2 rank:7 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,222: epoch:2 step:2 rank:6 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,222: epoch:2 step:2 rank:4 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,222: epoch:2 step:2 rank:5 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,224: epoch:2 step:2 rank:3 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,226: epoch:2 step:2 rank:1 || image:[tensor([30.0021, 30.0029], device='cuda:1'), tensor([20.0401, 20.0409], device='cuda:1')] || in_text:[tensor([31.0021, 31.0029], device='cuda:1'), tensor([21.0401, 21.0409], device='cuda:1')] || out_text:[tensor([32.0021, 32.0029], device='cuda:1'), tensor([22.0401, 22.0409], device='cuda:1')]
2023-09-10 10:35:54,226: epoch:2 step:2 rank:2 || image:[tensor([30.0022, 30.0030], device='cuda:2'), tensor([20.0402, 20.0410], device='cuda:2')] || in_text:[tensor([31.0022, 31.0030], device='cuda:2'), tensor([21.0402, 21.0410], device='cuda:2')] || out_text:[tensor([32.0022, 32.0030], device='cuda:2'), tensor([22.0402, 22.0410], device='cuda:2')]
2023-09-10 10:35:54,225: epoch:2 step:2 rank:6 || image:[tensor([30.0026, 30.0034], device='cuda:2'), tensor([20.0406, 20.0414], device='cuda:2')] || in_text:[tensor([31.0026, 31.0034], device='cuda:2'), tensor([21.0406, 21.0414], device='cuda:2')] || out_text:[tensor([32.0026, 32.0034], device='cuda:2'), tensor([22.0406, 22.0414], device='cuda:2')]
2023-09-10 10:35:54,225: epoch:2 step:2 rank:5 || image:[tensor([30.0025, 30.0033], device='cuda:1'), tensor([20.0405, 20.0413], device='cuda:1')] || in_text:[tensor([31.0025, 31.0033], device='cuda:1'), tensor([21.0405, 21.0413], device='cuda:1')] || out_text:[tensor([32.0025, 32.0033], device='cuda:1'), tensor([22.0405, 22.0413], device='cuda:1')]
2023-09-10 10:35:54,225: epoch:2 step:2 rank:7 || image:[tensor([30.0027, 30.0035], device='cuda:3'), tensor([20.0407, 20.0415], device='cuda:3')] || in_text:[tensor([31.0027, 31.0035], device='cuda:3'), tensor([21.0407, 21.0415], device='cuda:3')] || out_text:[tensor([32.0027, 32.0035], device='cuda:3'), tensor([22.0407, 22.0415], device='cuda:3')]
2023-09-10 10:35:54,226: epoch:2 step:2 rank:0 || image:[tensor([30.0020, 30.0028], device='cuda:0'), tensor([20.0400, 20.0408], device='cuda:0')] || in_text:[tensor([31.0020, 31.0028], device='cuda:0'), tensor([21.0400, 21.0408], device='cuda:0')] || out_text:[tensor([32.0020, 32.0028], device='cuda:0'), tensor([22.0400, 22.0408], device='cuda:0')]
2023-09-10 10:35:54,225: epoch:2 step:2 rank:4 || image:[tensor([30.0024, 30.0032], device='cuda:0'), tensor([20.0404, 20.0412], device='cuda:0')] || in_text:[tensor([31.0024, 31.0032], device='cuda:0'), tensor([21.0404, 21.0412], device='cuda:0')] || out_text:[tensor([32.0024, 32.0032], device='cuda:0'), tensor([22.0404, 22.0412], device='cuda:0')]
2023-09-10 10:35:54,227: epoch:2 step:2 rank:3 || image:[tensor([30.0023, 30.0031], device='cuda:3'), tensor([20.0403, 20.0411], device='cuda:3')] || in_text:[tensor([31.0023, 31.0031], device='cuda:3'), tensor([21.0403, 21.0411], device='cuda:3')] || out_text:[tensor([32.0023, 32.0031], device='cuda:3'), tensor([22.0403, 22.0411], device='cuda:3')]
2023-09-10 10:35:54,228: epoch:2 step:3 rank:0 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,228: epoch:2 step:3 rank:2 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,228: epoch:2 step:3 rank:1 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,227: epoch:2 step:3 rank:6 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,227: epoch:2 step:3 rank:7 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,227: epoch:2 step:3 rank:4 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,227: epoch:2 step:3 rank:5 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,228: epoch:2 step:3 rank:3 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,231: epoch:2 step:3 rank:0 || image:[tensor([30.0140, 30.0148], device='cuda:0'), tensor([20.0800, 20.0808], device='cuda:0')] || in_text:[tensor([31.0140, 31.0148], device='cuda:0'), tensor([21.0800, 21.0808], device='cuda:0')] || out_text:[tensor([32.0140, 32.0148], device='cuda:0'), tensor([22.0800, 22.0808], device='cuda:0')]
2023-09-10 10:35:54,231: epoch:2 step:3 rank:2 || image:[tensor([30.0142, 30.0150], device='cuda:2'), tensor([20.0802, 20.0810], device='cuda:2')] || in_text:[tensor([31.0142, 31.0150], device='cuda:2'), tensor([21.0802, 21.0810], device='cuda:2')] || out_text:[tensor([32.0142, 32.0150], device='cuda:2'), tensor([22.0802, 22.0810], device='cuda:2')]
2023-09-10 10:35:54,230: epoch:2 step:3 rank:4 || image:[tensor([30.0144, 30.0152], device='cuda:0'), tensor([20.0804, 20.0812], device='cuda:0')] || in_text:[tensor([31.0144, 31.0152], device='cuda:0'), tensor([21.0804, 21.0812], device='cuda:0')] || out_text:[tensor([32.0144, 32.0152], device='cuda:0'), tensor([22.0804, 22.0812], device='cuda:0')]
2023-09-10 10:35:54,231: epoch:2 step:3 rank:1 || image:[tensor([30.0141, 30.0149], device='cuda:1'), tensor([20.0801, 20.0809], device='cuda:1')] || in_text:[tensor([31.0141, 31.0149], device='cuda:1'), tensor([21.0801, 21.0809], device='cuda:1')] || out_text:[tensor([32.0141, 32.0149], device='cuda:1'), tensor([22.0801, 22.0809], device='cuda:1')]
2023-09-10 10:35:54,230: epoch:2 step:3 rank:6 || image:[tensor([30.0146, 30.0154], device='cuda:2'), tensor([20.0806, 20.0814], device='cuda:2')] || in_text:[tensor([31.0146, 31.0154], device='cuda:2'), tensor([21.0806, 21.0814], device='cuda:2')] || out_text:[tensor([32.0146, 32.0154], device='cuda:2'), tensor([22.0806, 22.0814], device='cuda:2')]
2023-09-10 10:35:54,230: epoch:2 step:3 rank:7 || image:[tensor([30.0147, 30.0155], device='cuda:3'), tensor([20.0807, 20.0815], device='cuda:3')] || in_text:[tensor([31.0147, 31.0155], device='cuda:3'), tensor([21.0807, 21.0815], device='cuda:3')] || out_text:[tensor([32.0147, 32.0155], device='cuda:3'), tensor([22.0807, 22.0815], device='cuda:3')]
2023-09-10 10:35:54,230: epoch:2 step:3 rank:5 || image:[tensor([30.0145, 30.0153], device='cuda:1'), tensor([20.0805, 20.0813], device='cuda:1')] || in_text:[tensor([31.0145, 31.0153], device='cuda:1'), tensor([21.0805, 21.0813], device='cuda:1')] || out_text:[tensor([32.0145, 32.0153], device='cuda:1'), tensor([22.0805, 22.0813], device='cuda:1')]
2023-09-10 10:35:54,231: epoch:2 step:3 rank:3 || image:[tensor([30.0143, 30.0151], device='cuda:3'), tensor([20.0803, 20.0811], device='cuda:3')] || in_text:[tensor([31.0143, 31.0151], device='cuda:3'), tensor([21.0803, 21.0811], device='cuda:3')] || out_text:[tensor([32.0143, 32.0151], device='cuda:3'), tensor([22.0803, 22.0811], device='cuda:3')]
2023-09-10 10:35:54,232: epoch:2 step:3 rank:0 || train_loss : 690.9781087239584
2023-09-10 10:35:54,232: epoch:2 step:3 rank:2 || train_loss : 690.9900716145834
2023-09-10 10:35:54,232: epoch:2 step:3 rank:1 || train_loss : 690.984130859375
2023-09-10 10:35:54,231: epoch:2 step:3 rank:6 || train_loss : 697.894775390625
2023-09-10 10:35:54,231: epoch:2 step:3 rank:4 || train_loss : 697.8826497395834
2023-09-10 10:35:54,231: epoch:2 step:3 rank:7 || train_loss : 697.9007975260416
2023-09-10 10:35:54,231: epoch:2 step:3 rank:5 || train_loss : 697.888671875
2023-09-10 10:35:54,232: epoch:2 step:3 rank:3 || train_loss : 690.9961751302084
2023-09-10 10:35:54,233: epoch:2 step:3 rank:0 || all_train_loss : 5555.515625
2023-09-10 10:35:54,392: epoch:3 step:1 rank:4 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,398: epoch:3 step:1 rank:4 || image:[tensor([10.0004, 10.0012], device='cuda:0'), tensor([20.0004, 20.0012], device='cuda:0')] || in_text:[tensor([11.0004, 11.0012], device='cuda:0'), tensor([21.0004, 21.0012], device='cuda:0')] || out_text:[tensor([12.0004, 12.0012], device='cuda:0'), tensor([22.0004, 22.0012], device='cuda:0')]
2023-09-10 10:35:54,425: epoch:3 step:1 rank:0 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,430: epoch:3 step:1 rank:0 || image:[tensor([10.0000, 10.0008], device='cuda:0'), tensor([20.0000, 20.0008], device='cuda:0')] || in_text:[tensor([11.0000, 11.0008], device='cuda:0'), tensor([21.0000, 21.0008], device='cuda:0')] || out_text:[tensor([12.0000, 12.0008], device='cuda:0'), tensor([22.0000, 22.0008], device='cuda:0')]
2023-09-10 10:35:54,432: epoch:3 step:1 rank:5 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,435: epoch:3 step:1 rank:6 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,438: epoch:3 step:1 rank:7 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,439: epoch:3 step:1 rank:5 || image:[tensor([10.0005, 10.0013], device='cuda:1'), tensor([20.0005, 20.0013], device='cuda:1')] || in_text:[tensor([11.0005, 11.0013], device='cuda:1'), tensor([21.0005, 21.0013], device='cuda:1')] || out_text:[tensor([12.0005, 12.0013], device='cuda:1'), tensor([22.0005, 22.0013], device='cuda:1')]
2023-09-10 10:35:54,440: epoch:3 step:1 rank:6 || image:[tensor([10.0006, 10.0014], device='cuda:2'), tensor([20.0006, 20.0014], device='cuda:2')] || in_text:[tensor([11.0006, 11.0014], device='cuda:2'), tensor([21.0006, 21.0014], device='cuda:2')] || out_text:[tensor([12.0006, 12.0014], device='cuda:2'), tensor([22.0006, 22.0014], device='cuda:2')]
2023-09-10 10:35:54,443: epoch:3 step:1 rank:7 || image:[tensor([10.0007, 10.0015], device='cuda:3'), tensor([20.0007, 20.0015], device='cuda:3')] || in_text:[tensor([11.0007, 11.0015], device='cuda:3'), tensor([21.0007, 21.0015], device='cuda:3')] || out_text:[tensor([12.0007, 12.0015], device='cuda:3'), tensor([22.0007, 22.0015], device='cuda:3')]
2023-09-10 10:35:54,448: epoch:3 step:1 rank:1 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,454: epoch:3 step:1 rank:1 || image:[tensor([10.0001, 10.0009], device='cuda:1'), tensor([20.0001, 20.0009], device='cuda:1')] || in_text:[tensor([11.0001, 11.0009], device='cuda:1'), tensor([21.0001, 21.0009], device='cuda:1')] || out_text:[tensor([12.0001, 12.0009], device='cuda:1'), tensor([22.0001, 22.0009], device='cuda:1')]
2023-09-10 10:35:54,460: epoch:3 step:1 rank:3 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,461: epoch:3 step:1 rank:2 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,467: epoch:3 step:1 rank:3 || image:[tensor([10.0003, 10.0011], device='cuda:3'), tensor([20.0003, 20.0011], device='cuda:3')] || in_text:[tensor([11.0003, 11.0011], device='cuda:3'), tensor([21.0003, 21.0011], device='cuda:3')] || out_text:[tensor([12.0003, 12.0011], device='cuda:3'), tensor([22.0003, 22.0011], device='cuda:3')]
2023-09-10 10:35:54,467: epoch:3 step:1 rank:2 || image:[tensor([10.0002, 10.0010], device='cuda:2'), tensor([20.0002, 20.0010], device='cuda:2')] || in_text:[tensor([11.0002, 11.0010], device='cuda:2'), tensor([21.0002, 21.0010], device='cuda:2')] || out_text:[tensor([12.0002, 12.0010], device='cuda:2'), tensor([22.0002, 22.0010], device='cuda:2')]
2023-09-10 10:35:54,471: epoch:3 step:2 rank:1 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,471: epoch:3 step:2 rank:0 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,470: epoch:3 step:2 rank:5 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,470: epoch:3 step:2 rank:6 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,470: epoch:3 step:2 rank:7 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,470: epoch:3 step:2 rank:4 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,472: epoch:3 step:2 rank:2 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,472: epoch:3 step:2 rank:3 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,474: epoch:3 step:2 rank:1 || image:[tensor([30.0021, 30.0029], device='cuda:1'), tensor([20.0401, 20.0409], device='cuda:1')] || in_text:[tensor([31.0021, 31.0029], device='cuda:1'), tensor([21.0401, 21.0409], device='cuda:1')] || out_text:[tensor([32.0021, 32.0029], device='cuda:1'), tensor([22.0401, 22.0409], device='cuda:1')]
2023-09-10 10:35:54,473: epoch:3 step:2 rank:7 || image:[tensor([30.0027, 30.0035], device='cuda:3'), tensor([20.0407, 20.0415], device='cuda:3')] || in_text:[tensor([31.0027, 31.0035], device='cuda:3'), tensor([21.0407, 21.0415], device='cuda:3')] || out_text:[tensor([32.0027, 32.0035], device='cuda:3'), tensor([22.0407, 22.0415], device='cuda:3')]
2023-09-10 10:35:54,473: epoch:3 step:2 rank:5 || image:[tensor([30.0025, 30.0033], device='cuda:1'), tensor([20.0405, 20.0413], device='cuda:1')] || in_text:[tensor([31.0025, 31.0033], device='cuda:1'), tensor([21.0405, 21.0413], device='cuda:1')] || out_text:[tensor([32.0025, 32.0033], device='cuda:1'), tensor([22.0405, 22.0413], device='cuda:1')]
2023-09-10 10:35:54,473: epoch:3 step:2 rank:6 || image:[tensor([30.0026, 30.0034], device='cuda:2'), tensor([20.0406, 20.0414], device='cuda:2')] || in_text:[tensor([31.0026, 31.0034], device='cuda:2'), tensor([21.0406, 21.0414], device='cuda:2')] || out_text:[tensor([32.0026, 32.0034], device='cuda:2'), tensor([22.0406, 22.0414], device='cuda:2')]
2023-09-10 10:35:54,473: epoch:3 step:2 rank:4 || image:[tensor([30.0024, 30.0032], device='cuda:0'), tensor([20.0404, 20.0412], device='cuda:0')] || in_text:[tensor([31.0024, 31.0032], device='cuda:0'), tensor([21.0404, 21.0412], device='cuda:0')] || out_text:[tensor([32.0024, 32.0032], device='cuda:0'), tensor([22.0404, 22.0412], device='cuda:0')]
2023-09-10 10:35:54,474: epoch:3 step:2 rank:0 || image:[tensor([30.0020, 30.0028], device='cuda:0'), tensor([20.0400, 20.0408], device='cuda:0')] || in_text:[tensor([31.0020, 31.0028], device='cuda:0'), tensor([21.0400, 21.0408], device='cuda:0')] || out_text:[tensor([32.0020, 32.0028], device='cuda:0'), tensor([22.0400, 22.0408], device='cuda:0')]
2023-09-10 10:35:54,475: epoch:3 step:2 rank:2 || image:[tensor([30.0022, 30.0030], device='cuda:2'), tensor([20.0402, 20.0410], device='cuda:2')] || in_text:[tensor([31.0022, 31.0030], device='cuda:2'), tensor([21.0402, 21.0410], device='cuda:2')] || out_text:[tensor([32.0022, 32.0030], device='cuda:2'), tensor([22.0402, 22.0410], device='cuda:2')]
2023-09-10 10:35:54,475: epoch:3 step:2 rank:3 || image:[tensor([30.0023, 30.0031], device='cuda:3'), tensor([20.0403, 20.0411], device='cuda:3')] || in_text:[tensor([31.0023, 31.0031], device='cuda:3'), tensor([21.0403, 21.0411], device='cuda:3')] || out_text:[tensor([32.0023, 32.0031], device='cuda:3'), tensor([22.0403, 22.0411], device='cuda:3')]
2023-09-10 10:35:54,476: epoch:3 step:3 rank:0 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,476: epoch:3 step:3 rank:1 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,476: epoch:3 step:3 rank:2 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,476: epoch:3 step:3 rank:5 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,476: epoch:3 step:3 rank:7 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,476: epoch:3 step:3 rank:6 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,476: epoch:3 step:3 rank:4 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,477: epoch:3 step:3 rank:3 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,479: epoch:3 step:3 rank:0 || image:[tensor([30.0140, 30.0148], device='cuda:0'), tensor([20.0800, 20.0808], device='cuda:0')] || in_text:[tensor([31.0140, 31.0148], device='cuda:0'), tensor([21.0800, 21.0808], device='cuda:0')] || out_text:[tensor([32.0140, 32.0148], device='cuda:0'), tensor([22.0800, 22.0808], device='cuda:0')]
2023-09-10 10:35:54,479: epoch:3 step:3 rank:6 || image:[tensor([30.0146, 30.0154], device='cuda:2'), tensor([20.0806, 20.0814], device='cuda:2')] || in_text:[tensor([31.0146, 31.0154], device='cuda:2'), tensor([21.0806, 21.0814], device='cuda:2')] || out_text:[tensor([32.0146, 32.0154], device='cuda:2'), tensor([22.0806, 22.0814], device='cuda:2')]
2023-09-10 10:35:54,479: epoch:3 step:3 rank:1 || image:[tensor([30.0141, 30.0149], device='cuda:1'), tensor([20.0801, 20.0809], device='cuda:1')] || in_text:[tensor([31.0141, 31.0149], device='cuda:1'), tensor([21.0801, 21.0809], device='cuda:1')] || out_text:[tensor([32.0141, 32.0149], device='cuda:1'), tensor([22.0801, 22.0809], device='cuda:1')]
2023-09-10 10:35:54,478: epoch:3 step:3 rank:4 || image:[tensor([30.0144, 30.0152], device='cuda:0'), tensor([20.0804, 20.0812], device='cuda:0')] || in_text:[tensor([31.0144, 31.0152], device='cuda:0'), tensor([21.0804, 21.0812], device='cuda:0')] || out_text:[tensor([32.0144, 32.0152], device='cuda:0'), tensor([22.0804, 22.0812], device='cuda:0')]
2023-09-10 10:35:54,479: epoch:3 step:3 rank:7 || image:[tensor([30.0147, 30.0155], device='cuda:3'), tensor([20.0807, 20.0815], device='cuda:3')] || in_text:[tensor([31.0147, 31.0155], device='cuda:3'), tensor([21.0807, 21.0815], device='cuda:3')] || out_text:[tensor([32.0147, 32.0155], device='cuda:3'), tensor([22.0807, 22.0815], device='cuda:3')]
2023-09-10 10:35:54,479: epoch:3 step:3 rank:2 || image:[tensor([30.0142, 30.0150], device='cuda:2'), tensor([20.0802, 20.0810], device='cuda:2')] || in_text:[tensor([31.0142, 31.0150], device='cuda:2'), tensor([21.0802, 21.0810], device='cuda:2')] || out_text:[tensor([32.0142, 32.0150], device='cuda:2'), tensor([22.0802, 22.0810], device='cuda:2')]
2023-09-10 10:35:54,479: epoch:3 step:3 rank:5 || image:[tensor([30.0145, 30.0153], device='cuda:1'), tensor([20.0805, 20.0813], device='cuda:1')] || in_text:[tensor([31.0145, 31.0153], device='cuda:1'), tensor([21.0805, 21.0813], device='cuda:1')] || out_text:[tensor([32.0145, 32.0153], device='cuda:1'), tensor([22.0805, 22.0813], device='cuda:1')]
2023-09-10 10:35:54,480: epoch:3 step:3 rank:3 || image:[tensor([30.0143, 30.0151], device='cuda:3'), tensor([20.0803, 20.0811], device='cuda:3')] || in_text:[tensor([31.0143, 31.0151], device='cuda:3'), tensor([21.0803, 21.0811], device='cuda:3')] || out_text:[tensor([32.0143, 32.0151], device='cuda:3'), tensor([22.0803, 22.0811], device='cuda:3')]
2023-09-10 10:35:54,481: epoch:3 step:3 rank:1 || train_loss : 379.2757161458333
2023-09-10 10:35:54,481: epoch:3 step:3 rank:0 || train_loss : 379.2723795572917
2023-09-10 10:35:54,481: epoch:3 step:3 rank:2 || train_loss : 379.279052734375
2023-09-10 10:35:54,480: epoch:3 step:3 rank:6 || train_loss : 383.3439534505208
2023-09-10 10:35:54,480: epoch:3 step:3 rank:7 || train_loss : 383.3473307291667
2023-09-10 10:35:54,480: epoch:3 step:3 rank:4 || train_loss : 383.3372802734375
2023-09-10 10:35:54,480: epoch:3 step:3 rank:5 || train_loss : 383.3406168619792
2023-09-10 10:35:54,481: epoch:3 step:3 rank:3 || train_loss : 379.2823893229167
2023-09-10 10:35:54,481: epoch:3 step:3 rank:0 || all_train_loss : 3050.478515625
2023-09-10 10:35:54,638: epoch:4 step:1 rank:4 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,645: epoch:4 step:1 rank:4 || image:[tensor([10.0004, 10.0012], device='cuda:0'), tensor([20.0004, 20.0012], device='cuda:0')] || in_text:[tensor([11.0004, 11.0012], device='cuda:0'), tensor([21.0004, 21.0012], device='cuda:0')] || out_text:[tensor([12.0004, 12.0012], device='cuda:0'), tensor([22.0004, 22.0012], device='cuda:0')]
2023-09-10 10:35:54,673: epoch:4 step:1 rank:0 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,678: epoch:4 step:1 rank:0 || image:[tensor([10.0000, 10.0008], device='cuda:0'), tensor([20.0000, 20.0008], device='cuda:0')] || in_text:[tensor([11.0000, 11.0008], device='cuda:0'), tensor([21.0000, 21.0008], device='cuda:0')] || out_text:[tensor([12.0000, 12.0008], device='cuda:0'), tensor([22.0000, 22.0008], device='cuda:0')]
2023-09-10 10:35:54,680: epoch:4 step:1 rank:5 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,682: epoch:4 step:1 rank:6 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,685: epoch:4 step:1 rank:7 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,687: epoch:4 step:1 rank:5 || image:[tensor([10.0005, 10.0013], device='cuda:1'), tensor([20.0005, 20.0013], device='cuda:1')] || in_text:[tensor([11.0005, 11.0013], device='cuda:1'), tensor([21.0005, 21.0013], device='cuda:1')] || out_text:[tensor([12.0005, 12.0013], device='cuda:1'), tensor([22.0005, 22.0013], device='cuda:1')]
2023-09-10 10:35:54,687: epoch:4 step:1 rank:6 || image:[tensor([10.0006, 10.0014], device='cuda:2'), tensor([20.0006, 20.0014], device='cuda:2')] || in_text:[tensor([11.0006, 11.0014], device='cuda:2'), tensor([21.0006, 21.0014], device='cuda:2')] || out_text:[tensor([12.0006, 12.0014], device='cuda:2'), tensor([22.0006, 22.0014], device='cuda:2')]
2023-09-10 10:35:54,690: epoch:4 step:1 rank:7 || image:[tensor([10.0007, 10.0015], device='cuda:3'), tensor([20.0007, 20.0015], device='cuda:3')] || in_text:[tensor([11.0007, 11.0015], device='cuda:3'), tensor([21.0007, 21.0015], device='cuda:3')] || out_text:[tensor([12.0007, 12.0015], device='cuda:3'), tensor([22.0007, 22.0015], device='cuda:3')]
2023-09-10 10:35:54,696: epoch:4 step:1 rank:1 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,701: epoch:4 step:1 rank:1 || image:[tensor([10.0001, 10.0009], device='cuda:1'), tensor([20.0001, 20.0009], device='cuda:1')] || in_text:[tensor([11.0001, 11.0009], device='cuda:1'), tensor([21.0001, 21.0009], device='cuda:1')] || out_text:[tensor([12.0001, 12.0009], device='cuda:1'), tensor([22.0001, 22.0009], device='cuda:1')]
2023-09-10 10:35:54,708: epoch:4 step:1 rank:2 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,713: epoch:4 step:1 rank:3 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,714: epoch:4 step:1 rank:2 || image:[tensor([10.0002, 10.0010], device='cuda:2'), tensor([20.0002, 20.0010], device='cuda:2')] || in_text:[tensor([11.0002, 11.0010], device='cuda:2'), tensor([21.0002, 21.0010], device='cuda:2')] || out_text:[tensor([12.0002, 12.0010], device='cuda:2'), tensor([22.0002, 22.0010], device='cuda:2')]
2023-09-10 10:35:54,719: epoch:4 step:1 rank:3 || image:[tensor([10.0003, 10.0011], device='cuda:3'), tensor([20.0003, 20.0011], device='cuda:3')] || in_text:[tensor([11.0003, 11.0011], device='cuda:3'), tensor([21.0003, 21.0011], device='cuda:3')] || out_text:[tensor([12.0003, 12.0011], device='cuda:3'), tensor([22.0003, 22.0011], device='cuda:3')]
2023-09-10 10:35:54,723: epoch:4 step:2 rank:2 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,723: epoch:4 step:2 rank:1 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,723: epoch:4 step:2 rank:0 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,722: epoch:4 step:2 rank:6 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,722: epoch:4 step:2 rank:5 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,722: epoch:4 step:2 rank:7 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,722: epoch:4 step:2 rank:4 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,724: epoch:4 step:2 rank:3 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,726: epoch:4 step:2 rank:1 || image:[tensor([30.0021, 30.0029], device='cuda:1'), tensor([20.0401, 20.0409], device='cuda:1')] || in_text:[tensor([31.0021, 31.0029], device='cuda:1'), tensor([21.0401, 21.0409], device='cuda:1')] || out_text:[tensor([32.0021, 32.0029], device='cuda:1'), tensor([22.0401, 22.0409], device='cuda:1')]
2023-09-10 10:35:54,725: epoch:4 step:2 rank:5 || image:[tensor([30.0025, 30.0033], device='cuda:1'), tensor([20.0405, 20.0413], device='cuda:1')] || in_text:[tensor([31.0025, 31.0033], device='cuda:1'), tensor([21.0405, 21.0413], device='cuda:1')] || out_text:[tensor([32.0025, 32.0033], device='cuda:1'), tensor([22.0405, 22.0413], device='cuda:1')]
2023-09-10 10:35:54,725: epoch:4 step:2 rank:6 || image:[tensor([30.0026, 30.0034], device='cuda:2'), tensor([20.0406, 20.0414], device='cuda:2')] || in_text:[tensor([31.0026, 31.0034], device='cuda:2'), tensor([21.0406, 21.0414], device='cuda:2')] || out_text:[tensor([32.0026, 32.0034], device='cuda:2'), tensor([22.0406, 22.0414], device='cuda:2')]
2023-09-10 10:35:54,725: epoch:4 step:2 rank:7 || image:[tensor([30.0027, 30.0035], device='cuda:3'), tensor([20.0407, 20.0415], device='cuda:3')] || in_text:[tensor([31.0027, 31.0035], device='cuda:3'), tensor([21.0407, 21.0415], device='cuda:3')] || out_text:[tensor([32.0027, 32.0035], device='cuda:3'), tensor([22.0407, 22.0415], device='cuda:3')]
2023-09-10 10:35:54,726: epoch:4 step:2 rank:0 || image:[tensor([30.0020, 30.0028], device='cuda:0'), tensor([20.0400, 20.0408], device='cuda:0')] || in_text:[tensor([31.0020, 31.0028], device='cuda:0'), tensor([21.0400, 21.0408], device='cuda:0')] || out_text:[tensor([32.0020, 32.0028], device='cuda:0'), tensor([22.0400, 22.0408], device='cuda:0')]
2023-09-10 10:35:54,725: epoch:4 step:2 rank:4 || image:[tensor([30.0024, 30.0032], device='cuda:0'), tensor([20.0404, 20.0412], device='cuda:0')] || in_text:[tensor([31.0024, 31.0032], device='cuda:0'), tensor([21.0404, 21.0412], device='cuda:0')] || out_text:[tensor([32.0024, 32.0032], device='cuda:0'), tensor([22.0404, 22.0412], device='cuda:0')]
2023-09-10 10:35:54,726: epoch:4 step:2 rank:2 || image:[tensor([30.0022, 30.0030], device='cuda:2'), tensor([20.0402, 20.0410], device='cuda:2')] || in_text:[tensor([31.0022, 31.0030], device='cuda:2'), tensor([21.0402, 21.0410], device='cuda:2')] || out_text:[tensor([32.0022, 32.0030], device='cuda:2'), tensor([22.0402, 22.0410], device='cuda:2')]
2023-09-10 10:35:54,727: epoch:4 step:2 rank:3 || image:[tensor([30.0023, 30.0031], device='cuda:3'), tensor([20.0403, 20.0411], device='cuda:3')] || in_text:[tensor([31.0023, 31.0031], device='cuda:3'), tensor([21.0403, 21.0411], device='cuda:3')] || out_text:[tensor([32.0023, 32.0031], device='cuda:3'), tensor([22.0403, 22.0411], device='cuda:3')]
2023-09-10 10:35:54,729: epoch:4 step:3 rank:0 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,729: epoch:4 step:3 rank:1 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,729: epoch:4 step:3 rank:2 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,728: epoch:4 step:3 rank:6 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,728: epoch:4 step:3 rank:7 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,728: epoch:4 step:3 rank:5 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,728: epoch:4 step:3 rank:4 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,729: epoch:4 step:3 rank:3 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,731: epoch:4 step:3 rank:0 || image:[tensor([30.0140, 30.0148], device='cuda:0'), tensor([20.0800, 20.0808], device='cuda:0')] || in_text:[tensor([31.0140, 31.0148], device='cuda:0'), tensor([21.0800, 21.0808], device='cuda:0')] || out_text:[tensor([32.0140, 32.0148], device='cuda:0'), tensor([22.0800, 22.0808], device='cuda:0')]
2023-09-10 10:35:54,731: epoch:4 step:3 rank:1 || image:[tensor([30.0141, 30.0149], device='cuda:1'), tensor([20.0801, 20.0809], device='cuda:1')] || in_text:[tensor([31.0141, 31.0149], device='cuda:1'), tensor([21.0801, 21.0809], device='cuda:1')] || out_text:[tensor([32.0141, 32.0149], device='cuda:1'), tensor([22.0801, 22.0809], device='cuda:1')]
2023-09-10 10:35:54,731: epoch:4 step:3 rank:2 || image:[tensor([30.0142, 30.0150], device='cuda:2'), tensor([20.0802, 20.0810], device='cuda:2')] || in_text:[tensor([31.0142, 31.0150], device='cuda:2'), tensor([21.0802, 21.0810], device='cuda:2')] || out_text:[tensor([32.0142, 32.0150], device='cuda:2'), tensor([22.0802, 22.0810], device='cuda:2')]
2023-09-10 10:35:54,731: epoch:4 step:3 rank:5 || image:[tensor([30.0145, 30.0153], device='cuda:1'), tensor([20.0805, 20.0813], device='cuda:1')] || in_text:[tensor([31.0145, 31.0153], device='cuda:1'), tensor([21.0805, 21.0813], device='cuda:1')] || out_text:[tensor([32.0145, 32.0153], device='cuda:1'), tensor([22.0805, 22.0813], device='cuda:1')]
2023-09-10 10:35:54,731: epoch:4 step:3 rank:6 || image:[tensor([30.0146, 30.0154], device='cuda:2'), tensor([20.0806, 20.0814], device='cuda:2')] || in_text:[tensor([31.0146, 31.0154], device='cuda:2'), tensor([21.0806, 21.0814], device='cuda:2')] || out_text:[tensor([32.0146, 32.0154], device='cuda:2'), tensor([22.0806, 22.0814], device='cuda:2')]
2023-09-10 10:35:54,731: epoch:4 step:3 rank:7 || image:[tensor([30.0147, 30.0155], device='cuda:3'), tensor([20.0807, 20.0815], device='cuda:3')] || in_text:[tensor([31.0147, 31.0155], device='cuda:3'), tensor([21.0807, 21.0815], device='cuda:3')] || out_text:[tensor([32.0147, 32.0155], device='cuda:3'), tensor([22.0807, 22.0815], device='cuda:3')]
2023-09-10 10:35:54,731: epoch:4 step:3 rank:4 || image:[tensor([30.0144, 30.0152], device='cuda:0'), tensor([20.0804, 20.0812], device='cuda:0')] || in_text:[tensor([31.0144, 31.0152], device='cuda:0'), tensor([21.0804, 21.0812], device='cuda:0')] || out_text:[tensor([32.0144, 32.0152], device='cuda:0'), tensor([22.0804, 22.0812], device='cuda:0')]
2023-09-10 10:35:54,732: epoch:4 step:3 rank:3 || image:[tensor([30.0143, 30.0151], device='cuda:3'), tensor([20.0803, 20.0811], device='cuda:3')] || in_text:[tensor([31.0143, 31.0151], device='cuda:3'), tensor([21.0803, 21.0811], device='cuda:3')] || out_text:[tensor([32.0143, 32.0151], device='cuda:3'), tensor([22.0803, 22.0811], device='cuda:3')]
2023-09-10 10:35:54,733: epoch:4 step:3 rank:1 || train_loss : 154.99044799804688
2023-09-10 10:35:54,733: epoch:4 step:3 rank:0 || train_loss : 154.9890340169271
2023-09-10 10:35:54,733: epoch:4 step:3 rank:2 || train_loss : 154.9918416341146
2023-09-10 10:35:54,732: epoch:4 step:3 rank:7 || train_loss : 156.9051310221354
2023-09-10 10:35:54,732: epoch:4 step:3 rank:5 || train_loss : 156.9023234049479
2023-09-10 10:35:54,732: epoch:4 step:3 rank:6 || train_loss : 156.90371704101562
2023-09-10 10:35:54,732: epoch:4 step:3 rank:4 || train_loss : 156.90090942382812
2023-09-10 10:35:54,733: epoch:4 step:3 rank:3 || train_loss : 154.99322509765625
2023-09-10 10:35:54,733: epoch:4 step:3 rank:0 || all_train_loss : 1247.57666015625
2023-09-10 10:35:54,893: epoch:5 step:1 rank:4 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,899: epoch:5 step:1 rank:4 || image:[tensor([10.0004, 10.0012], device='cuda:0'), tensor([20.0004, 20.0012], device='cuda:0')] || in_text:[tensor([11.0004, 11.0012], device='cuda:0'), tensor([21.0004, 21.0012], device='cuda:0')] || out_text:[tensor([12.0004, 12.0012], device='cuda:0'), tensor([22.0004, 22.0012], device='cuda:0')]
2023-09-10 10:35:54,926: epoch:5 step:1 rank:0 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,930: epoch:5 step:1 rank:5 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,931: epoch:5 step:1 rank:0 || image:[tensor([10.0000, 10.0008], device='cuda:0'), tensor([20.0000, 20.0008], device='cuda:0')] || in_text:[tensor([11.0000, 11.0008], device='cuda:0'), tensor([21.0000, 21.0008], device='cuda:0')] || out_text:[tensor([12.0000, 12.0008], device='cuda:0'), tensor([22.0000, 22.0008], device='cuda:0')]
2023-09-10 10:35:54,934: epoch:5 step:1 rank:6 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,936: epoch:5 step:1 rank:5 || image:[tensor([10.0005, 10.0013], device='cuda:1'), tensor([20.0005, 20.0013], device='cuda:1')] || in_text:[tensor([11.0005, 11.0013], device='cuda:1'), tensor([21.0005, 21.0013], device='cuda:1')] || out_text:[tensor([12.0005, 12.0013], device='cuda:1'), tensor([22.0005, 22.0013], device='cuda:1')]
2023-09-10 10:35:54,937: epoch:5 step:1 rank:7 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,940: epoch:5 step:1 rank:6 || image:[tensor([10.0006, 10.0014], device='cuda:2'), tensor([20.0006, 20.0014], device='cuda:2')] || in_text:[tensor([11.0006, 11.0014], device='cuda:2'), tensor([21.0006, 21.0014], device='cuda:2')] || out_text:[tensor([12.0006, 12.0014], device='cuda:2'), tensor([22.0006, 22.0014], device='cuda:2')]
2023-09-10 10:35:54,943: epoch:5 step:1 rank:7 || image:[tensor([10.0007, 10.0015], device='cuda:3'), tensor([20.0007, 20.0015], device='cuda:3')] || in_text:[tensor([11.0007, 11.0015], device='cuda:3'), tensor([21.0007, 21.0015], device='cuda:3')] || out_text:[tensor([12.0007, 12.0015], device='cuda:3'), tensor([22.0007, 22.0015], device='cuda:3')]
2023-09-10 10:35:54,947: epoch:5 step:1 rank:1 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,954: epoch:5 step:1 rank:1 || image:[tensor([10.0001, 10.0009], device='cuda:1'), tensor([20.0001, 20.0009], device='cuda:1')] || in_text:[tensor([11.0001, 11.0009], device='cuda:1'), tensor([21.0001, 21.0009], device='cuda:1')] || out_text:[tensor([12.0001, 12.0009], device='cuda:1'), tensor([22.0001, 22.0009], device='cuda:1')]
2023-09-10 10:35:54,959: epoch:5 step:1 rank:2 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,965: epoch:5 step:1 rank:2 || image:[tensor([10.0002, 10.0010], device='cuda:2'), tensor([20.0002, 20.0010], device='cuda:2')] || in_text:[tensor([11.0002, 11.0010], device='cuda:2'), tensor([21.0002, 21.0010], device='cuda:2')] || out_text:[tensor([12.0002, 12.0010], device='cuda:2'), tensor([22.0002, 22.0010], device='cuda:2')]
2023-09-10 10:35:54,968: epoch:5 step:1 rank:3 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,974: epoch:5 step:1 rank:3 || image:[tensor([10.0003, 10.0011], device='cuda:3'), tensor([20.0003, 20.0011], device='cuda:3')] || in_text:[tensor([11.0003, 11.0011], device='cuda:3'), tensor([21.0003, 21.0011], device='cuda:3')] || out_text:[tensor([12.0003, 12.0011], device='cuda:3'), tensor([22.0003, 22.0011], device='cuda:3')]
2023-09-10 10:35:54,978: epoch:5 step:2 rank:1 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,978: epoch:5 step:2 rank:2 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,978: epoch:5 step:2 rank:0 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,977: epoch:5 step:2 rank:6 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,977: epoch:5 step:2 rank:5 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,977: epoch:5 step:2 rank:7 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,977: epoch:5 step:2 rank:4 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,979: epoch:5 step:2 rank:3 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:54,981: epoch:5 step:2 rank:1 || image:[tensor([30.0021, 30.0029], device='cuda:1'), tensor([20.0401, 20.0409], device='cuda:1')] || in_text:[tensor([31.0021, 31.0029], device='cuda:1'), tensor([21.0401, 21.0409], device='cuda:1')] || out_text:[tensor([32.0021, 32.0029], device='cuda:1'), tensor([22.0401, 22.0409], device='cuda:1')]
2023-09-10 10:35:54,981: epoch:5 step:2 rank:0 || image:[tensor([30.0020, 30.0028], device='cuda:0'), tensor([20.0400, 20.0408], device='cuda:0')] || in_text:[tensor([31.0020, 31.0028], device='cuda:0'), tensor([21.0400, 21.0408], device='cuda:0')] || out_text:[tensor([32.0020, 32.0028], device='cuda:0'), tensor([22.0400, 22.0408], device='cuda:0')]
2023-09-10 10:35:54,980: epoch:5 step:2 rank:6 || image:[tensor([30.0026, 30.0034], device='cuda:2'), tensor([20.0406, 20.0414], device='cuda:2')] || in_text:[tensor([31.0026, 31.0034], device='cuda:2'), tensor([21.0406, 21.0414], device='cuda:2')] || out_text:[tensor([32.0026, 32.0034], device='cuda:2'), tensor([22.0406, 22.0414], device='cuda:2')]
2023-09-10 10:35:54,980: epoch:5 step:2 rank:7 || image:[tensor([30.0027, 30.0035], device='cuda:3'), tensor([20.0407, 20.0415], device='cuda:3')] || in_text:[tensor([31.0027, 31.0035], device='cuda:3'), tensor([21.0407, 21.0415], device='cuda:3')] || out_text:[tensor([32.0027, 32.0035], device='cuda:3'), tensor([22.0407, 22.0415], device='cuda:3')]
2023-09-10 10:35:54,980: epoch:5 step:2 rank:5 || image:[tensor([30.0025, 30.0033], device='cuda:1'), tensor([20.0405, 20.0413], device='cuda:1')] || in_text:[tensor([31.0025, 31.0033], device='cuda:1'), tensor([21.0405, 21.0413], device='cuda:1')] || out_text:[tensor([32.0025, 32.0033], device='cuda:1'), tensor([22.0405, 22.0413], device='cuda:1')]
2023-09-10 10:35:54,981: epoch:5 step:2 rank:2 || image:[tensor([30.0022, 30.0030], device='cuda:2'), tensor([20.0402, 20.0410], device='cuda:2')] || in_text:[tensor([31.0022, 31.0030], device='cuda:2'), tensor([21.0402, 21.0410], device='cuda:2')] || out_text:[tensor([32.0022, 32.0030], device='cuda:2'), tensor([22.0402, 22.0410], device='cuda:2')]
2023-09-10 10:35:54,980: epoch:5 step:2 rank:4 || image:[tensor([30.0024, 30.0032], device='cuda:0'), tensor([20.0404, 20.0412], device='cuda:0')] || in_text:[tensor([31.0024, 31.0032], device='cuda:0'), tensor([21.0404, 21.0412], device='cuda:0')] || out_text:[tensor([32.0024, 32.0032], device='cuda:0'), tensor([22.0404, 22.0412], device='cuda:0')]
2023-09-10 10:35:54,982: epoch:5 step:2 rank:3 || image:[tensor([30.0023, 30.0031], device='cuda:3'), tensor([20.0403, 20.0411], device='cuda:3')] || in_text:[tensor([31.0023, 31.0031], device='cuda:3'), tensor([21.0403, 21.0411], device='cuda:3')] || out_text:[tensor([32.0023, 32.0031], device='cuda:3'), tensor([22.0403, 22.0411], device='cuda:3')]
2023-09-10 10:35:54,983: epoch:5 step:3 rank:0 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,983: epoch:5 step:3 rank:2 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,983: epoch:5 step:3 rank:1 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,983: epoch:5 step:3 rank:7 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,983: epoch:5 step:3 rank:5 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,983: epoch:5 step:3 rank:6 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,983: epoch:5 step:3 rank:4 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,984: epoch:5 step:3 rank:3 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:54,986: epoch:5 step:3 rank:0 || image:[tensor([30.0140, 30.0148], device='cuda:0'), tensor([20.0800, 20.0808], device='cuda:0')] || in_text:[tensor([31.0140, 31.0148], device='cuda:0'), tensor([21.0800, 21.0808], device='cuda:0')] || out_text:[tensor([32.0140, 32.0148], device='cuda:0'), tensor([22.0800, 22.0808], device='cuda:0')]
2023-09-10 10:35:54,985: epoch:5 step:3 rank:6 || image:[tensor([30.0146, 30.0154], device='cuda:2'), tensor([20.0806, 20.0814], device='cuda:2')] || in_text:[tensor([31.0146, 31.0154], device='cuda:2'), tensor([21.0806, 21.0814], device='cuda:2')] || out_text:[tensor([32.0146, 32.0154], device='cuda:2'), tensor([22.0806, 22.0814], device='cuda:2')]
2023-09-10 10:35:54,985: epoch:5 step:3 rank:7 || image:[tensor([30.0147, 30.0155], device='cuda:3'), tensor([20.0807, 20.0815], device='cuda:3')] || in_text:[tensor([31.0147, 31.0155], device='cuda:3'), tensor([21.0807, 21.0815], device='cuda:3')] || out_text:[tensor([32.0147, 32.0155], device='cuda:3'), tensor([22.0807, 22.0815], device='cuda:3')]
2023-09-10 10:35:54,986: epoch:5 step:3 rank:4 || image:[tensor([30.0144, 30.0152], device='cuda:0'), tensor([20.0804, 20.0812], device='cuda:0')] || in_text:[tensor([31.0144, 31.0152], device='cuda:0'), tensor([21.0804, 21.0812], device='cuda:0')] || out_text:[tensor([32.0144, 32.0152], device='cuda:0'), tensor([22.0804, 22.0812], device='cuda:0')]
2023-09-10 10:35:54,986: epoch:5 step:3 rank:1 || image:[tensor([30.0141, 30.0149], device='cuda:1'), tensor([20.0801, 20.0809], device='cuda:1')] || in_text:[tensor([31.0141, 31.0149], device='cuda:1'), tensor([21.0801, 21.0809], device='cuda:1')] || out_text:[tensor([32.0141, 32.0149], device='cuda:1'), tensor([22.0801, 22.0809], device='cuda:1')]
2023-09-10 10:35:54,986: epoch:5 step:3 rank:2 || image:[tensor([30.0142, 30.0150], device='cuda:2'), tensor([20.0802, 20.0810], device='cuda:2')] || in_text:[tensor([31.0142, 31.0150], device='cuda:2'), tensor([21.0802, 21.0810], device='cuda:2')] || out_text:[tensor([32.0142, 32.0150], device='cuda:2'), tensor([22.0802, 22.0810], device='cuda:2')]
2023-09-10 10:35:54,986: epoch:5 step:3 rank:5 || image:[tensor([30.0145, 30.0153], device='cuda:1'), tensor([20.0805, 20.0813], device='cuda:1')] || in_text:[tensor([31.0145, 31.0153], device='cuda:1'), tensor([21.0805, 21.0813], device='cuda:1')] || out_text:[tensor([32.0145, 32.0153], device='cuda:1'), tensor([22.0805, 22.0813], device='cuda:1')]
2023-09-10 10:35:54,987: epoch:5 step:3 rank:3 || image:[tensor([30.0143, 30.0151], device='cuda:3'), tensor([20.0803, 20.0811], device='cuda:3')] || in_text:[tensor([31.0143, 31.0151], device='cuda:3'), tensor([21.0803, 21.0811], device='cuda:3')] || out_text:[tensor([32.0143, 32.0151], device='cuda:3'), tensor([22.0803, 22.0811], device='cuda:3')]
2023-09-10 10:35:54,988: epoch:5 step:3 rank:0 || train_loss : 28.694900512695312
2023-09-10 10:35:54,988: epoch:5 step:3 rank:1 || train_loss : 28.695180257161457
2023-09-10 10:35:54,988: epoch:5 step:3 rank:2 || train_loss : 28.695460001627605
2023-09-10 10:35:54,987: epoch:5 step:3 rank:7 || train_loss : 29.225385030110676
2023-09-10 10:35:54,987: epoch:5 step:3 rank:6 || train_loss : 29.22510274251302
2023-09-10 10:35:54,987: epoch:5 step:3 rank:4 || train_loss : 29.2245356241862
2023-09-10 10:35:54,987: epoch:5 step:3 rank:5 || train_loss : 29.224820454915363
2023-09-10 10:35:54,988: epoch:5 step:3 rank:3 || train_loss : 28.69573974609375
2023-09-10 10:35:54,988: epoch:5 step:3 rank:0 || all_train_loss : 231.68115234375
2023-09-10 10:35:55,147: epoch:6 step:1 rank:4 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,153: epoch:6 step:1 rank:4 || image:[tensor([10.0004, 10.0012], device='cuda:0'), tensor([20.0004, 20.0012], device='cuda:0')] || in_text:[tensor([11.0004, 11.0012], device='cuda:0'), tensor([21.0004, 21.0012], device='cuda:0')] || out_text:[tensor([12.0004, 12.0012], device='cuda:0'), tensor([22.0004, 22.0012], device='cuda:0')]
2023-09-10 10:35:55,180: epoch:6 step:1 rank:0 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,184: epoch:6 step:1 rank:5 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,185: epoch:6 step:1 rank:0 || image:[tensor([10.0000, 10.0008], device='cuda:0'), tensor([20.0000, 20.0008], device='cuda:0')] || in_text:[tensor([11.0000, 11.0008], device='cuda:0'), tensor([21.0000, 21.0008], device='cuda:0')] || out_text:[tensor([12.0000, 12.0008], device='cuda:0'), tensor([22.0000, 22.0008], device='cuda:0')]
2023-09-10 10:35:55,189: epoch:6 step:1 rank:6 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,191: epoch:6 step:1 rank:5 || image:[tensor([10.0005, 10.0013], device='cuda:1'), tensor([20.0005, 20.0013], device='cuda:1')] || in_text:[tensor([11.0005, 11.0013], device='cuda:1'), tensor([21.0005, 21.0013], device='cuda:1')] || out_text:[tensor([12.0005, 12.0013], device='cuda:1'), tensor([22.0005, 22.0013], device='cuda:1')]
2023-09-10 10:35:55,195: epoch:6 step:1 rank:6 || image:[tensor([10.0006, 10.0014], device='cuda:2'), tensor([20.0006, 20.0014], device='cuda:2')] || in_text:[tensor([11.0006, 11.0014], device='cuda:2'), tensor([21.0006, 21.0014], device='cuda:2')] || out_text:[tensor([12.0006, 12.0014], device='cuda:2'), tensor([22.0006, 22.0014], device='cuda:2')]
2023-09-10 10:35:55,196: epoch:6 step:1 rank:7 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,201: epoch:6 step:1 rank:7 || image:[tensor([10.0007, 10.0015], device='cuda:3'), tensor([20.0007, 20.0015], device='cuda:3')] || in_text:[tensor([11.0007, 11.0015], device='cuda:3'), tensor([21.0007, 21.0015], device='cuda:3')] || out_text:[tensor([12.0007, 12.0015], device='cuda:3'), tensor([22.0007, 22.0015], device='cuda:3')]
2023-09-10 10:35:55,204: epoch:6 step:1 rank:1 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,210: epoch:6 step:1 rank:1 || image:[tensor([10.0001, 10.0009], device='cuda:1'), tensor([20.0001, 20.0009], device='cuda:1')] || in_text:[tensor([11.0001, 11.0009], device='cuda:1'), tensor([21.0001, 21.0009], device='cuda:1')] || out_text:[tensor([12.0001, 12.0009], device='cuda:1'), tensor([22.0001, 22.0009], device='cuda:1')]
2023-09-10 10:35:55,215: epoch:6 step:1 rank:2 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,216: epoch:6 step:1 rank:3 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,221: epoch:6 step:1 rank:2 || image:[tensor([10.0002, 10.0010], device='cuda:2'), tensor([20.0002, 20.0010], device='cuda:2')] || in_text:[tensor([11.0002, 11.0010], device='cuda:2'), tensor([21.0002, 21.0010], device='cuda:2')] || out_text:[tensor([12.0002, 12.0010], device='cuda:2'), tensor([22.0002, 22.0010], device='cuda:2')]
2023-09-10 10:35:55,223: epoch:6 step:1 rank:3 || image:[tensor([10.0003, 10.0011], device='cuda:3'), tensor([20.0003, 20.0011], device='cuda:3')] || in_text:[tensor([11.0003, 11.0011], device='cuda:3'), tensor([21.0003, 21.0011], device='cuda:3')] || out_text:[tensor([12.0003, 12.0011], device='cuda:3'), tensor([22.0003, 22.0011], device='cuda:3')]
2023-09-10 10:35:55,228: epoch:6 step:2 rank:2 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,228: epoch:6 step:2 rank:1 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,228: epoch:6 step:2 rank:0 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,227: epoch:6 step:2 rank:6 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,227: epoch:6 step:2 rank:5 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,227: epoch:6 step:2 rank:7 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,227: epoch:6 step:2 rank:4 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,229: epoch:6 step:2 rank:3 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,231: epoch:6 step:2 rank:1 || image:[tensor([30.0021, 30.0029], device='cuda:1'), tensor([20.0401, 20.0409], device='cuda:1')] || in_text:[tensor([31.0021, 31.0029], device='cuda:1'), tensor([21.0401, 21.0409], device='cuda:1')] || out_text:[tensor([32.0021, 32.0029], device='cuda:1'), tensor([22.0401, 22.0409], device='cuda:1')]
2023-09-10 10:35:55,230: epoch:6 step:2 rank:7 || image:[tensor([30.0027, 30.0035], device='cuda:3'), tensor([20.0407, 20.0415], device='cuda:3')] || in_text:[tensor([31.0027, 31.0035], device='cuda:3'), tensor([21.0407, 21.0415], device='cuda:3')] || out_text:[tensor([32.0027, 32.0035], device='cuda:3'), tensor([22.0407, 22.0415], device='cuda:3')]
2023-09-10 10:35:55,230: epoch:6 step:2 rank:5 || image:[tensor([30.0025, 30.0033], device='cuda:1'), tensor([20.0405, 20.0413], device='cuda:1')] || in_text:[tensor([31.0025, 31.0033], device='cuda:1'), tensor([21.0405, 21.0413], device='cuda:1')] || out_text:[tensor([32.0025, 32.0033], device='cuda:1'), tensor([22.0405, 22.0413], device='cuda:1')]
2023-09-10 10:35:55,230: epoch:6 step:2 rank:6 || image:[tensor([30.0026, 30.0034], device='cuda:2'), tensor([20.0406, 20.0414], device='cuda:2')] || in_text:[tensor([31.0026, 31.0034], device='cuda:2'), tensor([21.0406, 21.0414], device='cuda:2')] || out_text:[tensor([32.0026, 32.0034], device='cuda:2'), tensor([22.0406, 22.0414], device='cuda:2')]
2023-09-10 10:35:55,231: epoch:6 step:2 rank:0 || image:[tensor([30.0020, 30.0028], device='cuda:0'), tensor([20.0400, 20.0408], device='cuda:0')] || in_text:[tensor([31.0020, 31.0028], device='cuda:0'), tensor([21.0400, 21.0408], device='cuda:0')] || out_text:[tensor([32.0020, 32.0028], device='cuda:0'), tensor([22.0400, 22.0408], device='cuda:0')]
2023-09-10 10:35:55,230: epoch:6 step:2 rank:4 || image:[tensor([30.0024, 30.0032], device='cuda:0'), tensor([20.0404, 20.0412], device='cuda:0')] || in_text:[tensor([31.0024, 31.0032], device='cuda:0'), tensor([21.0404, 21.0412], device='cuda:0')] || out_text:[tensor([32.0024, 32.0032], device='cuda:0'), tensor([22.0404, 22.0412], device='cuda:0')]
2023-09-10 10:35:55,231: epoch:6 step:2 rank:2 || image:[tensor([30.0022, 30.0030], device='cuda:2'), tensor([20.0402, 20.0410], device='cuda:2')] || in_text:[tensor([31.0022, 31.0030], device='cuda:2'), tensor([21.0402, 21.0410], device='cuda:2')] || out_text:[tensor([32.0022, 32.0030], device='cuda:2'), tensor([22.0402, 22.0410], device='cuda:2')]
2023-09-10 10:35:55,233: epoch:6 step:2 rank:3 || image:[tensor([30.0023, 30.0031], device='cuda:3'), tensor([20.0403, 20.0411], device='cuda:3')] || in_text:[tensor([31.0023, 31.0031], device='cuda:3'), tensor([21.0403, 21.0411], device='cuda:3')] || out_text:[tensor([32.0023, 32.0031], device='cuda:3'), tensor([22.0403, 22.0411], device='cuda:3')]
2023-09-10 10:35:55,234: epoch:6 step:3 rank:2 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,234: epoch:6 step:3 rank:1 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,234: epoch:6 step:3 rank:0 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,233: epoch:6 step:3 rank:6 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,233: epoch:6 step:3 rank:7 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,233: epoch:6 step:3 rank:5 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,233: epoch:6 step:3 rank:4 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,235: epoch:6 step:3 rank:3 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,237: epoch:6 step:3 rank:0 || image:[tensor([30.0140, 30.0148], device='cuda:0'), tensor([20.0800, 20.0808], device='cuda:0')] || in_text:[tensor([31.0140, 31.0148], device='cuda:0'), tensor([21.0800, 21.0808], device='cuda:0')] || out_text:[tensor([32.0140, 32.0148], device='cuda:0'), tensor([22.0800, 22.0808], device='cuda:0')]
2023-09-10 10:35:55,237: epoch:6 step:3 rank:1 || image:[tensor([30.0141, 30.0149], device='cuda:1'), tensor([20.0801, 20.0809], device='cuda:1')] || in_text:[tensor([31.0141, 31.0149], device='cuda:1'), tensor([21.0801, 21.0809], device='cuda:1')] || out_text:[tensor([32.0141, 32.0149], device='cuda:1'), tensor([22.0801, 22.0809], device='cuda:1')]
2023-09-10 10:35:55,237: epoch:6 step:3 rank:2 || image:[tensor([30.0142, 30.0150], device='cuda:2'), tensor([20.0802, 20.0810], device='cuda:2')] || in_text:[tensor([31.0142, 31.0150], device='cuda:2'), tensor([21.0802, 21.0810], device='cuda:2')] || out_text:[tensor([32.0142, 32.0150], device='cuda:2'), tensor([22.0802, 22.0810], device='cuda:2')]
2023-09-10 10:35:55,236: epoch:6 step:3 rank:6 || image:[tensor([30.0146, 30.0154], device='cuda:2'), tensor([20.0806, 20.0814], device='cuda:2')] || in_text:[tensor([31.0146, 31.0154], device='cuda:2'), tensor([21.0806, 21.0814], device='cuda:2')] || out_text:[tensor([32.0146, 32.0154], device='cuda:2'), tensor([22.0806, 22.0814], device='cuda:2')]
2023-09-10 10:35:55,236: epoch:6 step:3 rank:4 || image:[tensor([30.0144, 30.0152], device='cuda:0'), tensor([20.0804, 20.0812], device='cuda:0')] || in_text:[tensor([31.0144, 31.0152], device='cuda:0'), tensor([21.0804, 21.0812], device='cuda:0')] || out_text:[tensor([32.0144, 32.0152], device='cuda:0'), tensor([22.0804, 22.0812], device='cuda:0')]
2023-09-10 10:35:55,236: epoch:6 step:3 rank:7 || image:[tensor([30.0147, 30.0155], device='cuda:3'), tensor([20.0807, 20.0815], device='cuda:3')] || in_text:[tensor([31.0147, 31.0155], device='cuda:3'), tensor([21.0807, 21.0815], device='cuda:3')] || out_text:[tensor([32.0147, 32.0155], device='cuda:3'), tensor([22.0807, 22.0815], device='cuda:3')]
2023-09-10 10:35:55,236: epoch:6 step:3 rank:5 || image:[tensor([30.0145, 30.0153], device='cuda:1'), tensor([20.0805, 20.0813], device='cuda:1')] || in_text:[tensor([31.0145, 31.0153], device='cuda:1'), tensor([21.0805, 21.0813], device='cuda:1')] || out_text:[tensor([32.0145, 32.0153], device='cuda:1'), tensor([22.0805, 22.0813], device='cuda:1')]
2023-09-10 10:35:55,238: epoch:6 step:3 rank:3 || image:[tensor([30.0143, 30.0151], device='cuda:3'), tensor([20.0803, 20.0811], device='cuda:3')] || in_text:[tensor([31.0143, 31.0151], device='cuda:3'), tensor([21.0803, 21.0811], device='cuda:3')] || out_text:[tensor([32.0143, 32.0151], device='cuda:3'), tensor([22.0803, 22.0811], device='cuda:3')]
2023-09-10 10:35:55,239: epoch:6 step:3 rank:1 || train_loss : 9.81759262084961
2023-09-10 10:35:55,239: epoch:6 step:3 rank:0 || train_loss : 9.817525227864584
2023-09-10 10:35:55,239: epoch:6 step:3 rank:2 || train_loss : 9.817660649617514
2023-09-10 10:35:55,238: epoch:6 step:3 rank:7 || train_loss : 9.820342381795248
2023-09-10 10:35:55,238: epoch:6 step:3 rank:6 || train_loss : 9.8202756245931
2023-09-10 10:35:55,238: epoch:6 step:3 rank:4 || train_loss : 9.82014020284017
2023-09-10 10:35:55,238: epoch:6 step:3 rank:5 || train_loss : 9.820206960042318
2023-09-10 10:35:55,239: epoch:6 step:3 rank:3 || train_loss : 9.817728042602539
2023-09-10 10:35:55,240: epoch:6 step:3 rank:0 || all_train_loss : 78.55147298177083
2023-09-10 10:35:55,398: epoch:7 step:1 rank:4 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,404: epoch:7 step:1 rank:4 || image:[tensor([10.0004, 10.0012], device='cuda:0'), tensor([20.0004, 20.0012], device='cuda:0')] || in_text:[tensor([11.0004, 11.0012], device='cuda:0'), tensor([21.0004, 21.0012], device='cuda:0')] || out_text:[tensor([12.0004, 12.0012], device='cuda:0'), tensor([22.0004, 22.0012], device='cuda:0')]
2023-09-10 10:35:55,431: epoch:7 step:1 rank:0 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,437: epoch:7 step:1 rank:0 || image:[tensor([10.0000, 10.0008], device='cuda:0'), tensor([20.0000, 20.0008], device='cuda:0')] || in_text:[tensor([11.0000, 11.0008], device='cuda:0'), tensor([21.0000, 21.0008], device='cuda:0')] || out_text:[tensor([12.0000, 12.0008], device='cuda:0'), tensor([22.0000, 22.0008], device='cuda:0')]
2023-09-10 10:35:55,436: epoch:7 step:1 rank:5 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,442: epoch:7 step:1 rank:6 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,443: epoch:7 step:1 rank:5 || image:[tensor([10.0005, 10.0013], device='cuda:1'), tensor([20.0005, 20.0013], device='cuda:1')] || in_text:[tensor([11.0005, 11.0013], device='cuda:1'), tensor([21.0005, 21.0013], device='cuda:1')] || out_text:[tensor([12.0005, 12.0013], device='cuda:1'), tensor([22.0005, 22.0013], device='cuda:1')]
2023-09-10 10:35:55,445: epoch:7 step:1 rank:7 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,447: epoch:7 step:1 rank:6 || image:[tensor([10.0006, 10.0014], device='cuda:2'), tensor([20.0006, 20.0014], device='cuda:2')] || in_text:[tensor([11.0006, 11.0014], device='cuda:2'), tensor([21.0006, 21.0014], device='cuda:2')] || out_text:[tensor([12.0006, 12.0014], device='cuda:2'), tensor([22.0006, 22.0014], device='cuda:2')]
2023-09-10 10:35:55,451: epoch:7 step:1 rank:7 || image:[tensor([10.0007, 10.0015], device='cuda:3'), tensor([20.0007, 20.0015], device='cuda:3')] || in_text:[tensor([11.0007, 11.0015], device='cuda:3'), tensor([21.0007, 21.0015], device='cuda:3')] || out_text:[tensor([12.0007, 12.0015], device='cuda:3'), tensor([22.0007, 22.0015], device='cuda:3')]
2023-09-10 10:35:55,455: epoch:7 step:1 rank:1 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,461: epoch:7 step:1 rank:1 || image:[tensor([10.0001, 10.0009], device='cuda:1'), tensor([20.0001, 20.0009], device='cuda:1')] || in_text:[tensor([11.0001, 11.0009], device='cuda:1'), tensor([21.0001, 21.0009], device='cuda:1')] || out_text:[tensor([12.0001, 12.0009], device='cuda:1'), tensor([22.0001, 22.0009], device='cuda:1')]
2023-09-10 10:35:55,468: epoch:7 step:1 rank:3 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,468: epoch:7 step:1 rank:2 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,475: epoch:7 step:1 rank:2 || image:[tensor([10.0002, 10.0010], device='cuda:2'), tensor([20.0002, 20.0010], device='cuda:2')] || in_text:[tensor([11.0002, 11.0010], device='cuda:2'), tensor([21.0002, 21.0010], device='cuda:2')] || out_text:[tensor([12.0002, 12.0010], device='cuda:2'), tensor([22.0002, 22.0010], device='cuda:2')]
2023-09-10 10:35:55,475: epoch:7 step:1 rank:3 || image:[tensor([10.0003, 10.0011], device='cuda:3'), tensor([20.0003, 20.0011], device='cuda:3')] || in_text:[tensor([11.0003, 11.0011], device='cuda:3'), tensor([21.0003, 21.0011], device='cuda:3')] || out_text:[tensor([12.0003, 12.0011], device='cuda:3'), tensor([22.0003, 22.0011], device='cuda:3')]
2023-09-10 10:35:55,479: epoch:7 step:2 rank:1 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,479: epoch:7 step:2 rank:0 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,478: epoch:7 step:2 rank:5 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,478: epoch:7 step:2 rank:6 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,479: epoch:7 step:2 rank:2 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,478: epoch:7 step:2 rank:4 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,478: epoch:7 step:2 rank:7 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,480: epoch:7 step:2 rank:3 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,482: epoch:7 step:2 rank:1 || image:[tensor([30.0021, 30.0029], device='cuda:1'), tensor([20.0401, 20.0409], device='cuda:1')] || in_text:[tensor([31.0021, 31.0029], device='cuda:1'), tensor([21.0401, 21.0409], device='cuda:1')] || out_text:[tensor([32.0021, 32.0029], device='cuda:1'), tensor([22.0401, 22.0409], device='cuda:1')]
2023-09-10 10:35:55,481: epoch:7 step:2 rank:5 || image:[tensor([30.0025, 30.0033], device='cuda:1'), tensor([20.0405, 20.0413], device='cuda:1')] || in_text:[tensor([31.0025, 31.0033], device='cuda:1'), tensor([21.0405, 21.0413], device='cuda:1')] || out_text:[tensor([32.0025, 32.0033], device='cuda:1'), tensor([22.0405, 22.0413], device='cuda:1')]
2023-09-10 10:35:55,481: epoch:7 step:2 rank:6 || image:[tensor([30.0026, 30.0034], device='cuda:2'), tensor([20.0406, 20.0414], device='cuda:2')] || in_text:[tensor([31.0026, 31.0034], device='cuda:2'), tensor([21.0406, 21.0414], device='cuda:2')] || out_text:[tensor([32.0026, 32.0034], device='cuda:2'), tensor([22.0406, 22.0414], device='cuda:2')]
2023-09-10 10:35:55,481: epoch:7 step:2 rank:7 || image:[tensor([30.0027, 30.0035], device='cuda:3'), tensor([20.0407, 20.0415], device='cuda:3')] || in_text:[tensor([31.0027, 31.0035], device='cuda:3'), tensor([21.0407, 21.0415], device='cuda:3')] || out_text:[tensor([32.0027, 32.0035], device='cuda:3'), tensor([22.0407, 22.0415], device='cuda:3')]
2023-09-10 10:35:55,481: epoch:7 step:2 rank:4 || image:[tensor([30.0024, 30.0032], device='cuda:0'), tensor([20.0404, 20.0412], device='cuda:0')] || in_text:[tensor([31.0024, 31.0032], device='cuda:0'), tensor([21.0404, 21.0412], device='cuda:0')] || out_text:[tensor([32.0024, 32.0032], device='cuda:0'), tensor([22.0404, 22.0412], device='cuda:0')]
2023-09-10 10:35:55,482: epoch:7 step:2 rank:0 || image:[tensor([30.0020, 30.0028], device='cuda:0'), tensor([20.0400, 20.0408], device='cuda:0')] || in_text:[tensor([31.0020, 31.0028], device='cuda:0'), tensor([21.0400, 21.0408], device='cuda:0')] || out_text:[tensor([32.0020, 32.0028], device='cuda:0'), tensor([22.0400, 22.0408], device='cuda:0')]
2023-09-10 10:35:55,482: epoch:7 step:2 rank:2 || image:[tensor([30.0022, 30.0030], device='cuda:2'), tensor([20.0402, 20.0410], device='cuda:2')] || in_text:[tensor([31.0022, 31.0030], device='cuda:2'), tensor([21.0402, 21.0410], device='cuda:2')] || out_text:[tensor([32.0022, 32.0030], device='cuda:2'), tensor([22.0402, 22.0410], device='cuda:2')]
2023-09-10 10:35:55,484: epoch:7 step:2 rank:3 || image:[tensor([30.0023, 30.0031], device='cuda:3'), tensor([20.0403, 20.0411], device='cuda:3')] || in_text:[tensor([31.0023, 31.0031], device='cuda:3'), tensor([21.0403, 21.0411], device='cuda:3')] || out_text:[tensor([32.0023, 32.0031], device='cuda:3'), tensor([22.0403, 22.0411], device='cuda:3')]
2023-09-10 10:35:55,485: epoch:7 step:3 rank:1 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,485: epoch:7 step:3 rank:0 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,485: epoch:7 step:3 rank:2 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,484: epoch:7 step:3 rank:5 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,484: epoch:7 step:3 rank:7 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,484: epoch:7 step:3 rank:6 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,484: epoch:7 step:3 rank:4 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,485: epoch:7 step:3 rank:3 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,487: epoch:7 step:3 rank:0 || image:[tensor([30.0140, 30.0148], device='cuda:0'), tensor([20.0800, 20.0808], device='cuda:0')] || in_text:[tensor([31.0140, 31.0148], device='cuda:0'), tensor([21.0800, 21.0808], device='cuda:0')] || out_text:[tensor([32.0140, 32.0148], device='cuda:0'), tensor([22.0800, 22.0808], device='cuda:0')]
2023-09-10 10:35:55,487: epoch:7 step:3 rank:4 || image:[tensor([30.0144, 30.0152], device='cuda:0'), tensor([20.0804, 20.0812], device='cuda:0')] || in_text:[tensor([31.0144, 31.0152], device='cuda:0'), tensor([21.0804, 21.0812], device='cuda:0')] || out_text:[tensor([32.0144, 32.0152], device='cuda:0'), tensor([22.0804, 22.0812], device='cuda:0')]
2023-09-10 10:35:55,487: epoch:7 step:3 rank:6 || image:[tensor([30.0146, 30.0154], device='cuda:2'), tensor([20.0806, 20.0814], device='cuda:2')] || in_text:[tensor([31.0146, 31.0154], device='cuda:2'), tensor([21.0806, 21.0814], device='cuda:2')] || out_text:[tensor([32.0146, 32.0154], device='cuda:2'), tensor([22.0806, 22.0814], device='cuda:2')]
2023-09-10 10:35:55,487: epoch:7 step:3 rank:1 || image:[tensor([30.0141, 30.0149], device='cuda:1'), tensor([20.0801, 20.0809], device='cuda:1')] || in_text:[tensor([31.0141, 31.0149], device='cuda:1'), tensor([21.0801, 21.0809], device='cuda:1')] || out_text:[tensor([32.0141, 32.0149], device='cuda:1'), tensor([22.0801, 22.0809], device='cuda:1')]
2023-09-10 10:35:55,487: epoch:7 step:3 rank:7 || image:[tensor([30.0147, 30.0155], device='cuda:3'), tensor([20.0807, 20.0815], device='cuda:3')] || in_text:[tensor([31.0147, 31.0155], device='cuda:3'), tensor([21.0807, 21.0815], device='cuda:3')] || out_text:[tensor([32.0147, 32.0155], device='cuda:3'), tensor([22.0807, 22.0815], device='cuda:3')]
2023-09-10 10:35:55,487: epoch:7 step:3 rank:5 || image:[tensor([30.0145, 30.0153], device='cuda:1'), tensor([20.0805, 20.0813], device='cuda:1')] || in_text:[tensor([31.0145, 31.0153], device='cuda:1'), tensor([21.0805, 21.0813], device='cuda:1')] || out_text:[tensor([32.0145, 32.0153], device='cuda:1'), tensor([22.0805, 22.0813], device='cuda:1')]
2023-09-10 10:35:55,488: epoch:7 step:3 rank:2 || image:[tensor([30.0142, 30.0150], device='cuda:2'), tensor([20.0802, 20.0810], device='cuda:2')] || in_text:[tensor([31.0142, 31.0150], device='cuda:2'), tensor([21.0802, 21.0810], device='cuda:2')] || out_text:[tensor([32.0142, 32.0150], device='cuda:2'), tensor([22.0802, 22.0810], device='cuda:2')]
2023-09-10 10:35:55,488: epoch:7 step:3 rank:3 || image:[tensor([30.0143, 30.0151], device='cuda:3'), tensor([20.0803, 20.0811], device='cuda:3')] || in_text:[tensor([31.0143, 31.0151], device='cuda:3'), tensor([21.0803, 21.0811], device='cuda:3')] || out_text:[tensor([32.0143, 32.0151], device='cuda:3'), tensor([22.0803, 22.0811], device='cuda:3')]
2023-09-10 10:35:55,489: epoch:7 step:3 rank:0 || train_loss : 103.9657491048177
2023-09-10 10:35:55,489: epoch:7 step:3 rank:1 || train_loss : 103.966552734375
2023-09-10 10:35:55,489: epoch:7 step:3 rank:2 || train_loss : 103.96736653645833
2023-09-10 10:35:55,489: epoch:7 step:3 rank:4 || train_loss : 104.3580830891927
2023-09-10 10:35:55,489: epoch:7 step:3 rank:5 || train_loss : 104.35888671875
2023-09-10 10:35:55,489: epoch:7 step:3 rank:7 || train_loss : 104.36049397786458
2023-09-10 10:35:55,489: epoch:7 step:3 rank:6 || train_loss : 104.35970052083333
2023-09-10 10:35:55,490: epoch:7 step:3 rank:3 || train_loss : 103.96815999348958
2023-09-10 10:35:55,490: epoch:7 step:3 rank:0 || all_train_loss : 833.3050130208334
2023-09-10 10:35:55,649: epoch:8 step:1 rank:4 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,655: epoch:8 step:1 rank:4 || image:[tensor([10.0004, 10.0012], device='cuda:0'), tensor([20.0004, 20.0012], device='cuda:0')] || in_text:[tensor([11.0004, 11.0012], device='cuda:0'), tensor([21.0004, 21.0012], device='cuda:0')] || out_text:[tensor([12.0004, 12.0012], device='cuda:0'), tensor([22.0004, 22.0012], device='cuda:0')]
2023-09-10 10:35:55,682: epoch:8 step:1 rank:0 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,687: epoch:8 step:1 rank:0 || image:[tensor([10.0000, 10.0008], device='cuda:0'), tensor([20.0000, 20.0008], device='cuda:0')] || in_text:[tensor([11.0000, 11.0008], device='cuda:0'), tensor([21.0000, 21.0008], device='cuda:0')] || out_text:[tensor([12.0000, 12.0008], device='cuda:0'), tensor([22.0000, 22.0008], device='cuda:0')]
2023-09-10 10:35:55,689: epoch:8 step:1 rank:5 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,695: epoch:8 step:1 rank:6 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,696: epoch:8 step:1 rank:5 || image:[tensor([10.0005, 10.0013], device='cuda:1'), tensor([20.0005, 20.0013], device='cuda:1')] || in_text:[tensor([11.0005, 11.0013], device='cuda:1'), tensor([21.0005, 21.0013], device='cuda:1')] || out_text:[tensor([12.0005, 12.0013], device='cuda:1'), tensor([22.0005, 22.0013], device='cuda:1')]
2023-09-10 10:35:55,697: epoch:8 step:1 rank:7 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,702: epoch:8 step:1 rank:6 || image:[tensor([10.0006, 10.0014], device='cuda:2'), tensor([20.0006, 20.0014], device='cuda:2')] || in_text:[tensor([11.0006, 11.0014], device='cuda:2'), tensor([21.0006, 21.0014], device='cuda:2')] || out_text:[tensor([12.0006, 12.0014], device='cuda:2'), tensor([22.0006, 22.0014], device='cuda:2')]
2023-09-10 10:35:55,702: epoch:8 step:1 rank:7 || image:[tensor([10.0007, 10.0015], device='cuda:3'), tensor([20.0007, 20.0015], device='cuda:3')] || in_text:[tensor([11.0007, 11.0015], device='cuda:3'), tensor([21.0007, 21.0015], device='cuda:3')] || out_text:[tensor([12.0007, 12.0015], device='cuda:3'), tensor([22.0007, 22.0015], device='cuda:3')]
2023-09-10 10:35:55,703: epoch:8 step:1 rank:1 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,710: epoch:8 step:1 rank:1 || image:[tensor([10.0001, 10.0009], device='cuda:1'), tensor([20.0001, 20.0009], device='cuda:1')] || in_text:[tensor([11.0001, 11.0009], device='cuda:1'), tensor([21.0001, 21.0009], device='cuda:1')] || out_text:[tensor([12.0001, 12.0009], device='cuda:1'), tensor([22.0001, 22.0009], device='cuda:1')]
2023-09-10 10:35:55,717: epoch:8 step:1 rank:2 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,719: epoch:8 step:1 rank:3 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,723: epoch:8 step:1 rank:2 || image:[tensor([10.0002, 10.0010], device='cuda:2'), tensor([20.0002, 20.0010], device='cuda:2')] || in_text:[tensor([11.0002, 11.0010], device='cuda:2'), tensor([21.0002, 21.0010], device='cuda:2')] || out_text:[tensor([12.0002, 12.0010], device='cuda:2'), tensor([22.0002, 22.0010], device='cuda:2')]
2023-09-10 10:35:55,725: epoch:8 step:1 rank:3 || image:[tensor([10.0003, 10.0011], device='cuda:3'), tensor([20.0003, 20.0011], device='cuda:3')] || in_text:[tensor([11.0003, 11.0011], device='cuda:3'), tensor([21.0003, 21.0011], device='cuda:3')] || out_text:[tensor([12.0003, 12.0011], device='cuda:3'), tensor([22.0003, 22.0011], device='cuda:3')]
2023-09-10 10:35:55,729: epoch:8 step:2 rank:1 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,729: epoch:8 step:2 rank:2 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,729: epoch:8 step:2 rank:0 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,728: epoch:8 step:2 rank:5 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,728: epoch:8 step:2 rank:7 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,728: epoch:8 step:2 rank:6 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,728: epoch:8 step:2 rank:4 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,730: epoch:8 step:2 rank:3 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,732: epoch:8 step:2 rank:1 || image:[tensor([30.0021, 30.0029], device='cuda:1'), tensor([20.0401, 20.0409], device='cuda:1')] || in_text:[tensor([31.0021, 31.0029], device='cuda:1'), tensor([21.0401, 21.0409], device='cuda:1')] || out_text:[tensor([32.0021, 32.0029], device='cuda:1'), tensor([22.0401, 22.0409], device='cuda:1')]
2023-09-10 10:35:55,732: epoch:8 step:2 rank:2 || image:[tensor([30.0022, 30.0030], device='cuda:2'), tensor([20.0402, 20.0410], device='cuda:2')] || in_text:[tensor([31.0022, 31.0030], device='cuda:2'), tensor([21.0402, 21.0410], device='cuda:2')] || out_text:[tensor([32.0022, 32.0030], device='cuda:2'), tensor([22.0402, 22.0410], device='cuda:2')]
2023-09-10 10:35:55,731: epoch:8 step:2 rank:7 || image:[tensor([30.0027, 30.0035], device='cuda:3'), tensor([20.0407, 20.0415], device='cuda:3')] || in_text:[tensor([31.0027, 31.0035], device='cuda:3'), tensor([21.0407, 21.0415], device='cuda:3')] || out_text:[tensor([32.0027, 32.0035], device='cuda:3'), tensor([22.0407, 22.0415], device='cuda:3')]
2023-09-10 10:35:55,731: epoch:8 step:2 rank:5 || image:[tensor([30.0025, 30.0033], device='cuda:1'), tensor([20.0405, 20.0413], device='cuda:1')] || in_text:[tensor([31.0025, 31.0033], device='cuda:1'), tensor([21.0405, 21.0413], device='cuda:1')] || out_text:[tensor([32.0025, 32.0033], device='cuda:1'), tensor([22.0405, 22.0413], device='cuda:1')]
2023-09-10 10:35:55,732: epoch:8 step:2 rank:0 || image:[tensor([30.0020, 30.0028], device='cuda:0'), tensor([20.0400, 20.0408], device='cuda:0')] || in_text:[tensor([31.0020, 31.0028], device='cuda:0'), tensor([21.0400, 21.0408], device='cuda:0')] || out_text:[tensor([32.0020, 32.0028], device='cuda:0'), tensor([22.0400, 22.0408], device='cuda:0')]
2023-09-10 10:35:55,732: epoch:8 step:2 rank:4 || image:[tensor([30.0024, 30.0032], device='cuda:0'), tensor([20.0404, 20.0412], device='cuda:0')] || in_text:[tensor([31.0024, 31.0032], device='cuda:0'), tensor([21.0404, 21.0412], device='cuda:0')] || out_text:[tensor([32.0024, 32.0032], device='cuda:0'), tensor([22.0404, 22.0412], device='cuda:0')]
2023-09-10 10:35:55,732: epoch:8 step:2 rank:6 || image:[tensor([30.0026, 30.0034], device='cuda:2'), tensor([20.0406, 20.0414], device='cuda:2')] || in_text:[tensor([31.0026, 31.0034], device='cuda:2'), tensor([21.0406, 21.0414], device='cuda:2')] || out_text:[tensor([32.0026, 32.0034], device='cuda:2'), tensor([22.0406, 22.0414], device='cuda:2')]
2023-09-10 10:35:55,733: epoch:8 step:2 rank:3 || image:[tensor([30.0023, 30.0031], device='cuda:3'), tensor([20.0403, 20.0411], device='cuda:3')] || in_text:[tensor([31.0023, 31.0031], device='cuda:3'), tensor([21.0403, 21.0411], device='cuda:3')] || out_text:[tensor([32.0023, 32.0031], device='cuda:3'), tensor([22.0403, 22.0411], device='cuda:3')]
2023-09-10 10:35:55,734: epoch:8 step:3 rank:0 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,734: epoch:8 step:3 rank:2 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,734: epoch:8 step:3 rank:1 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,734: epoch:8 step:3 rank:5 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,734: epoch:8 step:3 rank:4 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,734: epoch:8 step:3 rank:7 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,734: epoch:8 step:3 rank:6 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,735: epoch:8 step:3 rank:3 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,737: epoch:8 step:3 rank:0 || image:[tensor([30.0140, 30.0148], device='cuda:0'), tensor([20.0800, 20.0808], device='cuda:0')] || in_text:[tensor([31.0140, 31.0148], device='cuda:0'), tensor([21.0800, 21.0808], device='cuda:0')] || out_text:[tensor([32.0140, 32.0148], device='cuda:0'), tensor([22.0800, 22.0808], device='cuda:0')]
2023-09-10 10:35:55,737: epoch:8 step:3 rank:2 || image:[tensor([30.0142, 30.0150], device='cuda:2'), tensor([20.0802, 20.0810], device='cuda:2')] || in_text:[tensor([31.0142, 31.0150], device='cuda:2'), tensor([21.0802, 21.0810], device='cuda:2')] || out_text:[tensor([32.0142, 32.0150], device='cuda:2'), tensor([22.0802, 22.0810], device='cuda:2')]
2023-09-10 10:35:55,736: epoch:8 step:3 rank:7 || image:[tensor([30.0147, 30.0155], device='cuda:3'), tensor([20.0807, 20.0815], device='cuda:3')] || in_text:[tensor([31.0147, 31.0155], device='cuda:3'), tensor([21.0807, 21.0815], device='cuda:3')] || out_text:[tensor([32.0147, 32.0155], device='cuda:3'), tensor([22.0807, 22.0815], device='cuda:3')]
2023-09-10 10:35:55,736: epoch:8 step:3 rank:4 || image:[tensor([30.0144, 30.0152], device='cuda:0'), tensor([20.0804, 20.0812], device='cuda:0')] || in_text:[tensor([31.0144, 31.0152], device='cuda:0'), tensor([21.0804, 21.0812], device='cuda:0')] || out_text:[tensor([32.0144, 32.0152], device='cuda:0'), tensor([22.0804, 22.0812], device='cuda:0')]
2023-09-10 10:35:55,736: epoch:8 step:3 rank:5 || image:[tensor([30.0145, 30.0153], device='cuda:1'), tensor([20.0805, 20.0813], device='cuda:1')] || in_text:[tensor([31.0145, 31.0153], device='cuda:1'), tensor([21.0805, 21.0813], device='cuda:1')] || out_text:[tensor([32.0145, 32.0153], device='cuda:1'), tensor([22.0805, 22.0813], device='cuda:1')]
2023-09-10 10:35:55,737: epoch:8 step:3 rank:3 || image:[tensor([30.0143, 30.0151], device='cuda:3'), tensor([20.0803, 20.0811], device='cuda:3')] || in_text:[tensor([31.0143, 31.0151], device='cuda:3'), tensor([21.0803, 21.0811], device='cuda:3')] || out_text:[tensor([32.0143, 32.0151], device='cuda:3'), tensor([22.0803, 22.0811], device='cuda:3')]
2023-09-10 10:35:55,737: epoch:8 step:3 rank:1 || image:[tensor([30.0141, 30.0149], device='cuda:1'), tensor([20.0801, 20.0809], device='cuda:1')] || in_text:[tensor([31.0141, 31.0149], device='cuda:1'), tensor([21.0801, 21.0809], device='cuda:1')] || out_text:[tensor([32.0141, 32.0149], device='cuda:1'), tensor([22.0801, 22.0809], device='cuda:1')]
2023-09-10 10:35:55,737: epoch:8 step:3 rank:6 || image:[tensor([30.0146, 30.0154], device='cuda:2'), tensor([20.0806, 20.0814], device='cuda:2')] || in_text:[tensor([31.0146, 31.0154], device='cuda:2'), tensor([21.0806, 21.0814], device='cuda:2')] || out_text:[tensor([32.0146, 32.0154], device='cuda:2'), tensor([22.0806, 22.0814], device='cuda:2')]
2023-09-10 10:35:55,738: epoch:8 step:3 rank:0 || train_loss : 309.6543782552083
2023-09-10 10:35:55,738: epoch:8 step:3 rank:2 || train_loss : 309.65936279296875
2023-09-10 10:35:55,738: epoch:8 step:3 rank:5 || train_loss : 311.3707275390625
2023-09-10 10:35:55,738: epoch:8 step:3 rank:4 || train_loss : 311.3682454427083
2023-09-10 10:35:55,738: epoch:8 step:3 rank:7 || train_loss : 311.3756917317708
2023-09-10 10:35:55,739: epoch:8 step:3 rank:1 || train_loss : 309.6568603515625
2023-09-10 10:35:55,739: epoch:8 step:3 rank:3 || train_loss : 309.6618245442708
2023-09-10 10:35:55,738: epoch:8 step:3 rank:6 || train_loss : 311.3732503255208
2023-09-10 10:35:55,739: epoch:8 step:3 rank:0 || all_train_loss : 2484.1202799479165
2023-09-10 10:35:55,898: epoch:9 step:1 rank:4 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,904: epoch:9 step:1 rank:4 || image:[tensor([10.0004, 10.0012], device='cuda:0'), tensor([20.0004, 20.0012], device='cuda:0')] || in_text:[tensor([11.0004, 11.0012], device='cuda:0'), tensor([21.0004, 21.0012], device='cuda:0')] || out_text:[tensor([12.0004, 12.0012], device='cuda:0'), tensor([22.0004, 22.0012], device='cuda:0')]
2023-09-10 10:35:55,932: epoch:9 step:1 rank:0 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,936: epoch:9 step:1 rank:5 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,938: epoch:9 step:1 rank:0 || image:[tensor([10.0000, 10.0008], device='cuda:0'), tensor([20.0000, 20.0008], device='cuda:0')] || in_text:[tensor([11.0000, 11.0008], device='cuda:0'), tensor([21.0000, 21.0008], device='cuda:0')] || out_text:[tensor([12.0000, 12.0008], device='cuda:0'), tensor([22.0000, 22.0008], device='cuda:0')]
2023-09-10 10:35:55,942: epoch:9 step:1 rank:5 || image:[tensor([10.0005, 10.0013], device='cuda:1'), tensor([20.0005, 20.0013], device='cuda:1')] || in_text:[tensor([11.0005, 11.0013], device='cuda:1'), tensor([21.0005, 21.0013], device='cuda:1')] || out_text:[tensor([12.0005, 12.0013], device='cuda:1'), tensor([22.0005, 22.0013], device='cuda:1')]
2023-09-10 10:35:55,944: epoch:9 step:1 rank:6 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,945: epoch:9 step:1 rank:7 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,949: epoch:9 step:1 rank:6 || image:[tensor([10.0006, 10.0014], device='cuda:2'), tensor([20.0006, 20.0014], device='cuda:2')] || in_text:[tensor([11.0006, 11.0014], device='cuda:2'), tensor([21.0006, 21.0014], device='cuda:2')] || out_text:[tensor([12.0006, 12.0014], device='cuda:2'), tensor([22.0006, 22.0014], device='cuda:2')]
2023-09-10 10:35:55,951: epoch:9 step:1 rank:7 || image:[tensor([10.0007, 10.0015], device='cuda:3'), tensor([20.0007, 20.0015], device='cuda:3')] || in_text:[tensor([11.0007, 11.0015], device='cuda:3'), tensor([21.0007, 21.0015], device='cuda:3')] || out_text:[tensor([12.0007, 12.0015], device='cuda:3'), tensor([22.0007, 22.0015], device='cuda:3')]
2023-09-10 10:35:55,955: epoch:9 step:1 rank:1 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,961: epoch:9 step:1 rank:1 || image:[tensor([10.0001, 10.0009], device='cuda:1'), tensor([20.0001, 20.0009], device='cuda:1')] || in_text:[tensor([11.0001, 11.0009], device='cuda:1'), tensor([21.0001, 21.0009], device='cuda:1')] || out_text:[tensor([12.0001, 12.0009], device='cuda:1'), tensor([22.0001, 22.0009], device='cuda:1')]
2023-09-10 10:35:55,966: epoch:9 step:1 rank:2 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,968: epoch:9 step:1 rank:3 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,972: epoch:9 step:1 rank:2 || image:[tensor([10.0002, 10.0010], device='cuda:2'), tensor([20.0002, 20.0010], device='cuda:2')] || in_text:[tensor([11.0002, 11.0010], device='cuda:2'), tensor([21.0002, 21.0010], device='cuda:2')] || out_text:[tensor([12.0002, 12.0010], device='cuda:2'), tensor([22.0002, 22.0010], device='cuda:2')]
2023-09-10 10:35:55,974: epoch:9 step:1 rank:3 || image:[tensor([10.0003, 10.0011], device='cuda:3'), tensor([20.0003, 20.0011], device='cuda:3')] || in_text:[tensor([11.0003, 11.0011], device='cuda:3'), tensor([21.0003, 21.0011], device='cuda:3')] || out_text:[tensor([12.0003, 12.0011], device='cuda:3'), tensor([22.0003, 22.0011], device='cuda:3')]
2023-09-10 10:35:55,978: epoch:9 step:2 rank:2 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,978: epoch:9 step:2 rank:1 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,978: epoch:9 step:2 rank:0 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,978: epoch:9 step:2 rank:6 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,978: epoch:9 step:2 rank:5 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,978: epoch:9 step:2 rank:7 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,978: epoch:9 step:2 rank:4 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,980: epoch:9 step:2 rank:3 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:55,981: epoch:9 step:2 rank:1 || image:[tensor([30.0021, 30.0029], device='cuda:1'), tensor([20.0401, 20.0409], device='cuda:1')] || in_text:[tensor([31.0021, 31.0029], device='cuda:1'), tensor([21.0401, 21.0409], device='cuda:1')] || out_text:[tensor([32.0021, 32.0029], device='cuda:1'), tensor([22.0401, 22.0409], device='cuda:1')]
2023-09-10 10:35:55,981: epoch:9 step:2 rank:5 || image:[tensor([30.0025, 30.0033], device='cuda:1'), tensor([20.0405, 20.0413], device='cuda:1')] || in_text:[tensor([31.0025, 31.0033], device='cuda:1'), tensor([21.0405, 21.0413], device='cuda:1')] || out_text:[tensor([32.0025, 32.0033], device='cuda:1'), tensor([22.0405, 22.0413], device='cuda:1')]
2023-09-10 10:35:55,981: epoch:9 step:2 rank:6 || image:[tensor([30.0026, 30.0034], device='cuda:2'), tensor([20.0406, 20.0414], device='cuda:2')] || in_text:[tensor([31.0026, 31.0034], device='cuda:2'), tensor([21.0406, 21.0414], device='cuda:2')] || out_text:[tensor([32.0026, 32.0034], device='cuda:2'), tensor([22.0406, 22.0414], device='cuda:2')]
2023-09-10 10:35:55,981: epoch:9 step:2 rank:0 || image:[tensor([30.0020, 30.0028], device='cuda:0'), tensor([20.0400, 20.0408], device='cuda:0')] || in_text:[tensor([31.0020, 31.0028], device='cuda:0'), tensor([21.0400, 21.0408], device='cuda:0')] || out_text:[tensor([32.0020, 32.0028], device='cuda:0'), tensor([22.0400, 22.0408], device='cuda:0')]
2023-09-10 10:35:55,981: epoch:9 step:2 rank:4 || image:[tensor([30.0024, 30.0032], device='cuda:0'), tensor([20.0404, 20.0412], device='cuda:0')] || in_text:[tensor([31.0024, 31.0032], device='cuda:0'), tensor([21.0404, 21.0412], device='cuda:0')] || out_text:[tensor([32.0024, 32.0032], device='cuda:0'), tensor([22.0404, 22.0412], device='cuda:0')]
2023-09-10 10:35:55,982: epoch:9 step:2 rank:2 || image:[tensor([30.0022, 30.0030], device='cuda:2'), tensor([20.0402, 20.0410], device='cuda:2')] || in_text:[tensor([31.0022, 31.0030], device='cuda:2'), tensor([21.0402, 21.0410], device='cuda:2')] || out_text:[tensor([32.0022, 32.0030], device='cuda:2'), tensor([22.0402, 22.0410], device='cuda:2')]
2023-09-10 10:35:55,981: epoch:9 step:2 rank:7 || image:[tensor([30.0027, 30.0035], device='cuda:3'), tensor([20.0407, 20.0415], device='cuda:3')] || in_text:[tensor([31.0027, 31.0035], device='cuda:3'), tensor([21.0407, 21.0415], device='cuda:3')] || out_text:[tensor([32.0027, 32.0035], device='cuda:3'), tensor([22.0407, 22.0415], device='cuda:3')]
2023-09-10 10:35:55,983: epoch:9 step:2 rank:3 || image:[tensor([30.0023, 30.0031], device='cuda:3'), tensor([20.0403, 20.0411], device='cuda:3')] || in_text:[tensor([31.0023, 31.0031], device='cuda:3'), tensor([21.0403, 21.0411], device='cuda:3')] || out_text:[tensor([32.0023, 32.0031], device='cuda:3'), tensor([22.0403, 22.0411], device='cuda:3')]
2023-09-10 10:35:55,984: epoch:9 step:3 rank:1 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,984: epoch:9 step:3 rank:0 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,984: epoch:9 step:3 rank:2 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,983: epoch:9 step:3 rank:6 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,983: epoch:9 step:3 rank:4 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,983: epoch:9 step:3 rank:5 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,983: epoch:9 step:3 rank:7 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,984: epoch:9 step:3 rank:3 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:55,986: epoch:9 step:3 rank:0 || image:[tensor([30.0140, 30.0148], device='cuda:0'), tensor([20.0800, 20.0808], device='cuda:0')] || in_text:[tensor([31.0140, 31.0148], device='cuda:0'), tensor([21.0800, 21.0808], device='cuda:0')] || out_text:[tensor([32.0140, 32.0148], device='cuda:0'), tensor([22.0800, 22.0808], device='cuda:0')]
2023-09-10 10:35:55,987: epoch:9 step:3 rank:2 || image:[tensor([30.0142, 30.0150], device='cuda:2'), tensor([20.0802, 20.0810], device='cuda:2')] || in_text:[tensor([31.0142, 31.0150], device='cuda:2'), tensor([21.0802, 21.0810], device='cuda:2')] || out_text:[tensor([32.0142, 32.0150], device='cuda:2'), tensor([22.0802, 22.0810], device='cuda:2')]
2023-09-10 10:35:55,987: epoch:9 step:3 rank:1 || image:[tensor([30.0141, 30.0149], device='cuda:1'), tensor([20.0801, 20.0809], device='cuda:1')] || in_text:[tensor([31.0141, 31.0149], device='cuda:1'), tensor([21.0801, 21.0809], device='cuda:1')] || out_text:[tensor([32.0141, 32.0149], device='cuda:1'), tensor([22.0801, 22.0809], device='cuda:1')]
2023-09-10 10:35:55,986: epoch:9 step:3 rank:6 || image:[tensor([30.0146, 30.0154], device='cuda:2'), tensor([20.0806, 20.0814], device='cuda:2')] || in_text:[tensor([31.0146, 31.0154], device='cuda:2'), tensor([21.0806, 21.0814], device='cuda:2')] || out_text:[tensor([32.0146, 32.0154], device='cuda:2'), tensor([22.0806, 22.0814], device='cuda:2')]
2023-09-10 10:35:55,986: epoch:9 step:3 rank:4 || image:[tensor([30.0144, 30.0152], device='cuda:0'), tensor([20.0804, 20.0812], device='cuda:0')] || in_text:[tensor([31.0144, 31.0152], device='cuda:0'), tensor([21.0804, 21.0812], device='cuda:0')] || out_text:[tensor([32.0144, 32.0152], device='cuda:0'), tensor([22.0804, 22.0812], device='cuda:0')]
2023-09-10 10:35:55,986: epoch:9 step:3 rank:5 || image:[tensor([30.0145, 30.0153], device='cuda:1'), tensor([20.0805, 20.0813], device='cuda:1')] || in_text:[tensor([31.0145, 31.0153], device='cuda:1'), tensor([21.0805, 21.0813], device='cuda:1')] || out_text:[tensor([32.0145, 32.0153], device='cuda:1'), tensor([22.0805, 22.0813], device='cuda:1')]
2023-09-10 10:35:55,987: epoch:9 step:3 rank:3 || image:[tensor([30.0143, 30.0151], device='cuda:3'), tensor([20.0803, 20.0811], device='cuda:3')] || in_text:[tensor([31.0143, 31.0151], device='cuda:3'), tensor([21.0803, 21.0811], device='cuda:3')] || out_text:[tensor([32.0143, 32.0151], device='cuda:3'), tensor([22.0803, 22.0811], device='cuda:3')]
2023-09-10 10:35:55,987: epoch:9 step:3 rank:7 || image:[tensor([30.0147, 30.0155], device='cuda:3'), tensor([20.0807, 20.0815], device='cuda:3')] || in_text:[tensor([31.0147, 31.0155], device='cuda:3'), tensor([21.0807, 21.0815], device='cuda:3')] || out_text:[tensor([32.0147, 32.0155], device='cuda:3'), tensor([22.0807, 22.0815], device='cuda:3')]
2023-09-10 10:35:55,988: epoch:9 step:3 rank:1 || train_loss : 613.330078125
2023-09-10 10:35:55,988: epoch:9 step:3 rank:2 || train_loss : 613.3350830078125
2023-09-10 10:35:55,988: epoch:9 step:3 rank:0 || train_loss : 613.3251139322916
2023-09-10 10:35:55,988: epoch:9 step:3 rank:4 || train_loss : 617.2266438802084
2023-09-10 10:35:55,988: epoch:9 step:3 rank:3 || train_loss : 613.3400472005209
2023-09-10 10:35:55,988: epoch:9 step:3 rank:5 || train_loss : 617.231689453125
2023-09-10 10:35:55,988: epoch:9 step:3 rank:6 || train_loss : 617.2366536458334
2023-09-10 10:35:55,988: epoch:9 step:3 rank:7 || train_loss : 617.2416585286459
2023-09-10 10:35:55,989: epoch:9 step:3 rank:0 || all_train_loss : 4922.266927083333
2023-09-10 10:35:56,147: epoch:10 step:1 rank:4 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:56,153: epoch:10 step:1 rank:4 || image:[tensor([10.0004, 10.0012], device='cuda:0'), tensor([20.0004, 20.0012], device='cuda:0')] || in_text:[tensor([11.0004, 11.0012], device='cuda:0'), tensor([21.0004, 21.0012], device='cuda:0')] || out_text:[tensor([12.0004, 12.0012], device='cuda:0'), tensor([22.0004, 22.0012], device='cuda:0')]
2023-09-10 10:35:56,181: epoch:10 step:1 rank:0 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:56,186: epoch:10 step:1 rank:5 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:56,187: epoch:10 step:1 rank:0 || image:[tensor([10.0000, 10.0008], device='cuda:0'), tensor([20.0000, 20.0008], device='cuda:0')] || in_text:[tensor([11.0000, 11.0008], device='cuda:0'), tensor([21.0000, 21.0008], device='cuda:0')] || out_text:[tensor([12.0000, 12.0008], device='cuda:0'), tensor([22.0000, 22.0008], device='cuda:0')]
2023-09-10 10:35:56,192: epoch:10 step:1 rank:5 || image:[tensor([10.0005, 10.0013], device='cuda:1'), tensor([20.0005, 20.0013], device='cuda:1')] || in_text:[tensor([11.0005, 11.0013], device='cuda:1'), tensor([21.0005, 21.0013], device='cuda:1')] || out_text:[tensor([12.0005, 12.0013], device='cuda:1'), tensor([22.0005, 22.0013], device='cuda:1')]
2023-09-10 10:35:56,193: epoch:10 step:1 rank:6 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:56,195: epoch:10 step:1 rank:7 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:56,198: epoch:10 step:1 rank:6 || image:[tensor([10.0006, 10.0014], device='cuda:2'), tensor([20.0006, 20.0014], device='cuda:2')] || in_text:[tensor([11.0006, 11.0014], device='cuda:2'), tensor([21.0006, 21.0014], device='cuda:2')] || out_text:[tensor([12.0006, 12.0014], device='cuda:2'), tensor([22.0006, 22.0014], device='cuda:2')]
2023-09-10 10:35:56,201: epoch:10 step:1 rank:7 || image:[tensor([10.0007, 10.0015], device='cuda:3'), tensor([20.0007, 20.0015], device='cuda:3')] || in_text:[tensor([11.0007, 11.0015], device='cuda:3'), tensor([21.0007, 21.0015], device='cuda:3')] || out_text:[tensor([12.0007, 12.0015], device='cuda:3'), tensor([22.0007, 22.0015], device='cuda:3')]
2023-09-10 10:35:56,207: epoch:10 step:1 rank:1 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:56,212: epoch:10 step:1 rank:1 || image:[tensor([10.0001, 10.0009], device='cuda:1'), tensor([20.0001, 20.0009], device='cuda:1')] || in_text:[tensor([11.0001, 11.0009], device='cuda:1'), tensor([21.0001, 21.0009], device='cuda:1')] || out_text:[tensor([12.0001, 12.0009], device='cuda:1'), tensor([22.0001, 22.0009], device='cuda:1')]
2023-09-10 10:35:56,217: epoch:10 step:1 rank:3 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:56,217: epoch:10 step:1 rank:2 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:56,223: epoch:10 step:1 rank:3 || image:[tensor([10.0003, 10.0011], device='cuda:3'), tensor([20.0003, 20.0011], device='cuda:3')] || in_text:[tensor([11.0003, 11.0011], device='cuda:3'), tensor([21.0003, 21.0011], device='cuda:3')] || out_text:[tensor([12.0003, 12.0011], device='cuda:3'), tensor([22.0003, 22.0011], device='cuda:3')]
2023-09-10 10:35:56,223: epoch:10 step:1 rank:2 || image:[tensor([10.0002, 10.0010], device='cuda:2'), tensor([20.0002, 20.0010], device='cuda:2')] || in_text:[tensor([11.0002, 11.0010], device='cuda:2'), tensor([21.0002, 21.0010], device='cuda:2')] || out_text:[tensor([12.0002, 12.0010], device='cuda:2'), tensor([22.0002, 22.0010], device='cuda:2')]
2023-09-10 10:35:56,227: epoch:10 step:2 rank:1 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:56,227: epoch:10 step:2 rank:0 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:56,227: epoch:10 step:2 rank:2 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:56,227: epoch:10 step:2 rank:5 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:56,227: epoch:10 step:2 rank:6 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:56,227: epoch:10 step:2 rank:7 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:56,227: epoch:10 step:2 rank:4 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:56,228: epoch:10 step:2 rank:3 || batch_size = image:torch.Size([65, 1]) || in_text:torch.Size([65, 1]) || out_text:torch.Size([65, 1])
2023-09-10 10:35:56,230: epoch:10 step:2 rank:1 || image:[tensor([30.0021, 30.0029], device='cuda:1'), tensor([20.0401, 20.0409], device='cuda:1')] || in_text:[tensor([31.0021, 31.0029], device='cuda:1'), tensor([21.0401, 21.0409], device='cuda:1')] || out_text:[tensor([32.0021, 32.0029], device='cuda:1'), tensor([22.0401, 22.0409], device='cuda:1')]
2023-09-10 10:35:56,230: epoch:10 step:2 rank:0 || image:[tensor([30.0020, 30.0028], device='cuda:0'), tensor([20.0400, 20.0408], device='cuda:0')] || in_text:[tensor([31.0020, 31.0028], device='cuda:0'), tensor([21.0400, 21.0408], device='cuda:0')] || out_text:[tensor([32.0020, 32.0028], device='cuda:0'), tensor([22.0400, 22.0408], device='cuda:0')]
2023-09-10 10:35:56,229: epoch:10 step:2 rank:6 || image:[tensor([30.0026, 30.0034], device='cuda:2'), tensor([20.0406, 20.0414], device='cuda:2')] || in_text:[tensor([31.0026, 31.0034], device='cuda:2'), tensor([21.0406, 21.0414], device='cuda:2')] || out_text:[tensor([32.0026, 32.0034], device='cuda:2'), tensor([22.0406, 22.0414], device='cuda:2')]
2023-09-10 10:35:56,229: epoch:10 step:2 rank:5 || image:[tensor([30.0025, 30.0033], device='cuda:1'), tensor([20.0405, 20.0413], device='cuda:1')] || in_text:[tensor([31.0025, 31.0033], device='cuda:1'), tensor([21.0405, 21.0413], device='cuda:1')] || out_text:[tensor([32.0025, 32.0033], device='cuda:1'), tensor([22.0405, 22.0413], device='cuda:1')]
2023-09-10 10:35:56,229: epoch:10 step:2 rank:7 || image:[tensor([30.0027, 30.0035], device='cuda:3'), tensor([20.0407, 20.0415], device='cuda:3')] || in_text:[tensor([31.0027, 31.0035], device='cuda:3'), tensor([21.0407, 21.0415], device='cuda:3')] || out_text:[tensor([32.0027, 32.0035], device='cuda:3'), tensor([22.0407, 22.0415], device='cuda:3')]
2023-09-10 10:35:56,230: epoch:10 step:2 rank:4 || image:[tensor([30.0024, 30.0032], device='cuda:0'), tensor([20.0404, 20.0412], device='cuda:0')] || in_text:[tensor([31.0024, 31.0032], device='cuda:0'), tensor([21.0404, 21.0412], device='cuda:0')] || out_text:[tensor([32.0024, 32.0032], device='cuda:0'), tensor([22.0404, 22.0412], device='cuda:0')]
2023-09-10 10:35:56,230: epoch:10 step:2 rank:2 || image:[tensor([30.0022, 30.0030], device='cuda:2'), tensor([20.0402, 20.0410], device='cuda:2')] || in_text:[tensor([31.0022, 31.0030], device='cuda:2'), tensor([21.0402, 21.0410], device='cuda:2')] || out_text:[tensor([32.0022, 32.0030], device='cuda:2'), tensor([22.0402, 22.0410], device='cuda:2')]
2023-09-10 10:35:56,232: epoch:10 step:2 rank:3 || image:[tensor([30.0023, 30.0031], device='cuda:3'), tensor([20.0403, 20.0411], device='cuda:3')] || in_text:[tensor([31.0023, 31.0031], device='cuda:3'), tensor([21.0403, 21.0411], device='cuda:3')] || out_text:[tensor([32.0023, 32.0031], device='cuda:3'), tensor([22.0403, 22.0411], device='cuda:3')]
2023-09-10 10:35:56,233: epoch:10 step:3 rank:0 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:56,233: epoch:10 step:3 rank:1 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:56,233: epoch:10 step:3 rank:2 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:56,232: epoch:10 step:3 rank:7 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:56,232: epoch:10 step:3 rank:6 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:56,232: epoch:10 step:3 rank:5 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:56,232: epoch:10 step:3 rank:4 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:56,233: epoch:10 step:3 rank:3 || batch_size = image:torch.Size([52, 1]) || in_text:torch.Size([52, 1]) || out_text:torch.Size([52, 1])
2023-09-10 10:35:56,235: epoch:10 step:3 rank:0 || image:[tensor([30.0140, 30.0148], device='cuda:0'), tensor([20.0800, 20.0808], device='cuda:0')] || in_text:[tensor([31.0140, 31.0148], device='cuda:0'), tensor([21.0800, 21.0808], device='cuda:0')] || out_text:[tensor([32.0140, 32.0148], device='cuda:0'), tensor([22.0800, 22.0808], device='cuda:0')]
2023-09-10 10:35:56,236: epoch:10 step:3 rank:1 || image:[tensor([30.0141, 30.0149], device='cuda:1'), tensor([20.0801, 20.0809], device='cuda:1')] || in_text:[tensor([31.0141, 31.0149], device='cuda:1'), tensor([21.0801, 21.0809], device='cuda:1')] || out_text:[tensor([32.0141, 32.0149], device='cuda:1'), tensor([22.0801, 22.0809], device='cuda:1')]
2023-09-10 10:35:56,236: epoch:10 step:3 rank:2 || image:[tensor([30.0142, 30.0150], device='cuda:2'), tensor([20.0802, 20.0810], device='cuda:2')] || in_text:[tensor([31.0142, 31.0150], device='cuda:2'), tensor([21.0802, 21.0810], device='cuda:2')] || out_text:[tensor([32.0142, 32.0150], device='cuda:2'), tensor([22.0802, 22.0810], device='cuda:2')]
2023-09-10 10:35:56,235: epoch:10 step:3 rank:7 || image:[tensor([30.0147, 30.0155], device='cuda:3'), tensor([20.0807, 20.0815], device='cuda:3')] || in_text:[tensor([31.0147, 31.0155], device='cuda:3'), tensor([21.0807, 21.0815], device='cuda:3')] || out_text:[tensor([32.0147, 32.0155], device='cuda:3'), tensor([22.0807, 22.0815], device='cuda:3')]
2023-09-10 10:35:56,235: epoch:10 step:3 rank:4 || image:[tensor([30.0144, 30.0152], device='cuda:0'), tensor([20.0804, 20.0812], device='cuda:0')] || in_text:[tensor([31.0144, 31.0152], device='cuda:0'), tensor([21.0804, 21.0812], device='cuda:0')] || out_text:[tensor([32.0144, 32.0152], device='cuda:0'), tensor([22.0804, 22.0812], device='cuda:0')]
2023-09-10 10:35:56,235: epoch:10 step:3 rank:5 || image:[tensor([30.0145, 30.0153], device='cuda:1'), tensor([20.0805, 20.0813], device='cuda:1')] || in_text:[tensor([31.0145, 31.0153], device='cuda:1'), tensor([21.0805, 21.0813], device='cuda:1')] || out_text:[tensor([32.0145, 32.0153], device='cuda:1'), tensor([22.0805, 22.0813], device='cuda:1')]
2023-09-10 10:35:56,235: epoch:10 step:3 rank:6 || image:[tensor([30.0146, 30.0154], device='cuda:2'), tensor([20.0806, 20.0814], device='cuda:2')] || in_text:[tensor([31.0146, 31.0154], device='cuda:2'), tensor([21.0806, 21.0814], device='cuda:2')] || out_text:[tensor([32.0146, 32.0154], device='cuda:2'), tensor([22.0806, 22.0814], device='cuda:2')]
2023-09-10 10:35:56,236: epoch:10 step:3 rank:3 || image:[tensor([30.0143, 30.0151], device='cuda:3'), tensor([20.0803, 20.0811], device='cuda:3')] || in_text:[tensor([31.0143, 31.0151], device='cuda:3'), tensor([21.0803, 21.0811], device='cuda:3')] || out_text:[tensor([32.0143, 32.0151], device='cuda:3'), tensor([22.0803, 22.0811], device='cuda:3')]
2023-09-10 10:35:56,237: epoch:10 step:3 rank:1 || train_loss : 981.79345703125
2023-09-10 10:35:56,237: epoch:10 step:3 rank:0 || train_loss : 981.7854817708334
2023-09-10 10:35:56,237: epoch:10 step:3 rank:2 || train_loss : 981.8015950520834
2023-09-10 10:35:56,236: epoch:10 step:3 rank:4 || train_loss : 988.5411783854166
2023-09-10 10:35:56,236: epoch:10 step:3 rank:7 || train_loss : 988.5654296875
2023-09-10 10:35:56,236: epoch:10 step:3 rank:5 || train_loss : 988.5491536458334
2023-09-10 10:35:56,236: epoch:10 step:3 rank:6 || train_loss : 988.5572916666666
2023-09-10 10:35:56,237: epoch:10 step:3 rank:3 || train_loss : 981.8096516927084
2023-09-10 10:35:56,238: epoch:10 step:3 rank:0 || all_train_loss : 7881.403645833333
